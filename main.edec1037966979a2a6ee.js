(function(){"use strict";var __webpack_modules__={2050:function(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__){eval('\n;// CONCATENATED MODULE: ./script/helper/helper.ts\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar createTag = function createTag(tag, className, value) {\n  var elem = document.createElement(tag);\n\n  if (value) {\n    elem.innerHTML = value;\n  }\n\n  if (className) {\n    if (Array.isArray(className)) {\n      var _elem$classList;\n\n      (_elem$classList = elem.classList).add.apply(_elem$classList, _toConsumableArray(className));\n    } else {\n      elem.classList.add(className);\n    }\n  }\n\n  return elem;\n};\nvar createInput = function createInput(type, className, value, placeholder) {\n  var elem = document.createElement(\'input\');\n  elem.type = type;\n\n  if (value) {\n    elem.value = value;\n  }\n\n  if (placeholder) {\n    elem.placeholder = placeholder;\n  }\n\n  if (className) {\n    if (Array.isArray(className)) {\n      var _elem$classList2;\n\n      (_elem$classList2 = elem.classList).add.apply(_elem$classList2, _toConsumableArray(className));\n    } else {\n      elem.classList.add(className);\n    }\n  }\n\n  return elem;\n};\nvar createSelect = function createSelect(name, id, className, options) {\n  var select = createTag(\'select\', className);\n  select.name = name;\n  select.id = id;\n  var listOptions = options.map(function (option) {\n    var opt = createTag(\'option\', \'\');\n    opt.value = option.value;\n    opt.innerText = option.text;\n    opt.selected = !!option.selected;\n    return opt;\n  });\n  select.append.apply(select, _toConsumableArray(listOptions));\n  return select;\n};\nfunction createOptionListDifficulty(num, selected) {\n  var list = [];\n\n  for (var i = 1; i <= num; i += 1) {\n    list.push({\n      value: "".concat(i),\n      text: "".concat(i),\n      selected: i === selected\n    });\n  }\n\n  return list;\n}\nvar createImg = function createImg(link, className, alt) {\n  var img = createTag(\'img\', className);\n  img.src = link;\n  img.alt = alt;\n  return img;\n};\nfunction shuffleWordList(array) {\n  for (var i = array.length - 1; i > 0; i -= 1) {\n    var j = Math.floor(Math.random() * (i + 1)); // eslint-disable-next-line no-param-reassign\n\n    var _ref = [array[j], array[i]];\n    array[i] = _ref[0];\n    array[j] = _ref[1];\n  }\n}\nfunction getRandomItemFromArray(array, words) {\n  var excludeWords = Array.from(words);\n\n  if (array.length === 1) {\n    return array[0];\n  }\n\n  if (array.every(function (word) {\n    return excludeWords.includes(word);\n  })) {\n    return array[0];\n  }\n\n  var item = array[Math.floor(Math.random() * array.length)];\n\n  if (excludeWords.includes(item)) {\n    return getRandomItemFromArray(array, words);\n  }\n\n  return item;\n}\nfunction resetKeyDownListener() {\n  document.body.onkeydown = function () {};\n}\nfunction getRandomIndexFromArray(length, exclude) {\n  if (length === 1) return 0;\n  var index = Math.floor(Math.random() * length);\n\n  if (index === exclude) {\n    return getRandomIndexFromArray(length, exclude);\n  }\n\n  return index;\n}\n;// CONCATENATED MODULE: ./script/interface/typeApp.ts\nvar IdPages;\n\n(function (IdPages) {\n  IdPages["main"] = "main-page";\n  IdPages["ebook"] = "ebook";\n  IdPages["dictionary"] = "dictionary";\n  IdPages["games"] = "games";\n  IdPages["gameAudio"] = "game-audio";\n  IdPages["gameSprint"] = "game-sprint";\n  IdPages["statistics"] = "statistics";\n  IdPages["aboutTeam"] = "about-team";\n  IdPages["review"] = "review";\n  IdPages["aboutProject"] = "about-project";\n  IdPages["login"] = "login";\n})(IdPages || (IdPages = {}));\n\nvar NamePages;\n\n(function (NamePages) {\n  NamePages["main"] = "\\u0413\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F";\n  NamePages["ebook"] = "\\u0423\\u0447\\u0435\\u0431\\u043D\\u0438\\u043A";\n  NamePages["dictionary"] = "\\u0421\\u043B\\u043E\\u0432\\u0430\\u0440\\u044C";\n  NamePages["games"] = "\\u0418\\u0433\\u0440\\u044B";\n  NamePages["statistics"] = "\\u0421\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430";\n  NamePages["aboutTeam"] = "\\u041E \\u043A\\u043E\\u043C\\u0430\\u043D\\u0434\\u0435";\n  NamePages["review"] = "\\u041E\\u0442\\u0437\\u044B\\u0432\\u044B";\n  NamePages["aboutProject"] = "O \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0435";\n  NamePages["login"] = "\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F";\n  NamePages["aboutProjectYoutube"] = "\\u0412\\u0438\\u0434\\u0435\\u043E";\n})(NamePages || (NamePages = {}));\n;// CONCATENATED MODULE: ./script/interface/freeText.ts\nvar CSSClass;\n\n(function (CSSClass) {\n  CSSClass["authorization"] = "authorization";\n  CSSClass["authorizationTitle"] = "authorization__title";\n  CSSClass["authorizationInput"] = "authorization__input";\n  CSSClass["authorizationInputEmail"] = "authorization__input-email";\n  CSSClass["authorizationInputPassword"] = "authorization__input-password";\n  CSSClass["authorizationButton"] = "authorization__button";\n  CSSClass["authorizationSVG"] = "authorization-svg";\n  CSSClass["authorizationLogo"] = "authorization__logo";\n  CSSClass["buttonArrow"] = "button__arrow";\n  CSSClass["header"] = "header";\n  CSSClass["headerShift"] = "header-shift";\n  CSSClass["headerWrapper"] = "header-wrapper";\n  CSSClass["headerLogo"] = "header__logo";\n  CSSClass["headerSVG"] = "header-svg";\n  CSSClass["headerBurger"] = "header__burger";\n  CSSClass["headerAuthorization"] = "header__authorization";\n  CSSClass["main"] = "main";\n  CSSClass["mainWrapper"] = "main-wrapper";\n  CSSClass["mainContainer"] = "main-container";\n  CSSClass["mainContainerShift"] = "main-container-shift";\n  CSSClass["mainPageTitle"] = "main-page__title";\n  CSSClass["mainPageText"] = "main-page__text";\n  CSSClass["mainPageBtn"] = "main-page__btn";\n  CSSClass["textbook"] = "textbook";\n  CSSClass["textbookHeader"] = "textbook-header";\n  CSSClass["textbookWrapper"] = "textbook-wrapper";\n  CSSClass["textbookCard"] = "textbook-card";\n  CSSClass["textbookCardImage"] = "textbook-card-image";\n  CSSClass["textbookCardContent"] = "textbook-card-content";\n  CSSClass["textbookCardDelimeter"] = "textbook-card-delimeter";\n  CSSClass["textbookButtonsGroup"] = "textbook-buttons-group";\n  CSSClass["textbookMenuButtonWrapper"] = "textbook-menu-button-wrapper";\n  CSSClass["textbookMenuButton"] = "textbook-menu-button";\n  CSSClass["dictionary"] = "dictionary";\n  CSSClass["cardIconButtonsWrapper"] = "card-iconbuttons-wrapper";\n  CSSClass["cardDoneActive"] = "card-done--active";\n  CSSClass["cardHardActive"] = "card-hard--active";\n  CSSClass["timerBlock"] = "timer-block";\n  CSSClass["timerBlockCircle"] = "timer-block__circle";\n  CSSClass["dimLight"] = "dim-light";\n  CSSClass["deleteBorder"] = "delete-border";\n  CSSClass["fillGray"] = "fill-gray";\n  CSSClass["gamesPage"] = "games-page";\n  CSSClass["gamesPageGame"] = "games-page__game";\n  CSSClass["gameAudio"] = "game-audio";\n  CSSClass["gameAudioGame"] = "game-audio__game";\n  CSSClass["gameAudioPreview"] = "game-audio__preview";\n  CSSClass["gameAudioAnswer"] = "game-audio__answer";\n  CSSClass["gameAudioAnswerNum"] = "game-audio__answer_num";\n  CSSClass["gameAudioAnswers"] = "game-audio__answers";\n  CSSClass["gameAudioHeader"] = "game-audio__header";\n  CSSClass["gameAudioHeaderBottom"] = "game-audio__header-bottom";\n  CSSClass["gameAudioHeaderImg"] = "game-audio__header-img";\n  CSSClass["gameAudioButton"] = "game-audio__button";\n  CSSClass["gameAudioButtonVoice"] = "game-audio__button-voice";\n  CSSClass["gameAudioButtonVoiceImg"] = "game-audio__button-voice__img";\n  CSSClass["gameAudioBlockButtons"] = "game-audio__block-buttons";\n  CSSClass["gameAudioBlockButtonsStart"] = "game-audio__block-buttons__start";\n  CSSClass["gameAudioBlockButtonsSelect"] = "game-audio__block-buttons__select";\n  CSSClass["gameAudioBlockButtonsFieldset"] = "game-audio__block-buttons__fieldset";\n  CSSClass["gameAudioBlockButtonsFieldsetBlock"] = "game-audio__block-buttons__fieldset-block";\n  CSSClass["gameAudioTitle"] = "game-audio__title";\n  CSSClass["gameAudioDescription"] = "game-audio__description";\n  CSSClass["gameAudioDescriptionBlock"] = "game-audio__description-block";\n  CSSClass["gameAudioDescriptionControl"] = "game-audio__description-control";\n  CSSClass["gameAudioWrapperButton"] = "game-audio__wrapper-button";\n  CSSClass["gameAudioResultBlock"] = "game-audio__result-block";\n  CSSClass["gameAudioResultButtons"] = "game-audio__result-buttons";\n  CSSClass["gameSprint"] = "game-sprint";\n  CSSClass["gameSprintCurrentAccount"] = "game-sprint__current-account";\n  CSSClass["gameSprintGame"] = "game-sprint__game";\n  CSSClass["gameSprintPreview"] = "game-sprint__preview";\n  CSSClass["gameSprintAnswerNum"] = "game-sprint__answer_num";\n  CSSClass["gameSprintHeaderImg"] = "game-sprint__header-img";\n  CSSClass["gameSprintBlockButtons"] = "game-sprint__block-buttons";\n  CSSClass["gameSprintBlockButtonsStart"] = "game-sprint__block-buttons__start";\n  CSSClass["gameSprintBlockButtonsSelect"] = "game-sprint__block-buttons__select";\n  CSSClass["gameSprintBlockButtonsFieldset"] = "game-sprint__block-buttons__fieldset";\n  CSSClass["gameSprintBlockButtonsFieldsetBlock"] = "game-sprint__block-buttons__fieldset-block";\n  CSSClass["gameSprintTitle"] = "game-sprint__title";\n  CSSClass["gameSprintDescription"] = "game-sprint__description";\n  CSSClass["gameSprintDescriptionBlock"] = "game-sprint__description-block";\n  CSSClass["gameSprintDescriptionControl"] = "game-sprint__description-control";\n  CSSClass["gameSprintResultBlock"] = "game-sprint__result-block";\n  CSSClass["gameSprintResultButtons"] = "game-sprint__result-buttons";\n  CSSClass["gameWindow"] = "game-window";\n  CSSClass["gameWindowTimer"] = "game-window__timer";\n  CSSClass["gameWindowTimerBlock"] = "game-window__timer-block";\n  CSSClass["gameWindowCorrectCounter"] = "game-window__correct-counter";\n  CSSClass["gameWindowCorrectCounterIcon"] = "game-window__correct-counter-icon";\n  CSSClass["gameWindowEnglishWord"] = "game-window__english-word";\n  CSSClass["gameWindowRussianWord"] = "game-window__russian-word";\n  CSSClass["gameWindowButtons"] = "game-window__buttons";\n  CSSClass["gameWindowCorrectButton"] = "game-window__correct-button";\n  CSSClass["gameWindowIncorrectButton"] = "game-window__incorrect-button";\n  CSSClass["gamesPageGameName"] = "games-page__game-name";\n  CSSClass["lineThrough"] = "line-through";\n  CSSClass["rightAnswer"] = "right-answer";\n  CSSClass["warning"] = "warning";\n  CSSClass["warningMessage"] = "warning-message";\n  CSSClass["footer"] = "footer";\n  CSSClass["footerWrapper"] = "footer-wrapper";\n  CSSClass["footerYear"] = "footer__year";\n  CSSClass["footerRSSchool"] = "footer__rsschool";\n  CSSClass["footerLink"] = "link";\n  CSSClass["footerGithub"] = "footer__github";\n  CSSClass["closeBurger"] = "close-burger";\n  CSSClass["navItems"] = "nav-items";\n  CSSClass["navItem"] = "nav-item";\n  CSSClass["navItemIcon"] = "item__icon";\n  CSSClass["navItemName"] = "item__name";\n  CSSClass["aboutProjectTitle"] = "about-project__title";\n  CSSClass["aboutProjectText"] = "about-project__text";\n  CSSClass["aboutProjectAdvancedItems"] = "about-project__advanced-items";\n  CSSClass["aboutProjectAdvancedItem"] = "about-project__advanced-item";\n  CSSClass["aboutProjectAdvancedSvg"] = "about-project__advanced-item__svg";\n  CSSClass["aboutProjectAdvancedName"] = "about-project__advanced-item__name";\n  CSSClass["aboutProjectAdvancedText"] = "about-project__advanced-item__text";\n  CSSClass["aboutProjectBtnWrapper"] = "about-project__btn-wrapper";\n  CSSClass["aboutProjectBtn"] = "about-project__btn";\n  CSSClass["aboutProjectBtnYoutube"] = "youtube";\n  CSSClass["resultBlock"] = "result-block";\n  CSSClass["resultBlockTitle"] = "result-block__title";\n  CSSClass["resultBlockAnswer"] = "result-block__answer";\n  CSSClass["resultBlockRightAnswers"] = "result-block__right-answers";\n  CSSClass["resultBlockWrongAnswers"] = "result-block__wrong-answers";\n  CSSClass["resultBlockEnglishWord"] = "result-block__english-word";\n  CSSClass["resultBlockVoice"] = "result-block__voice";\n  CSSClass["title"] = "title";\n  CSSClass["aboutTeamTitle"] = "about-team__title";\n  CSSClass["aboutTeamItems"] = "about-team__items";\n  CSSClass["aboutTeamItem"] = "about-team-item";\n  CSSClass["aboutTeamItemImg"] = "about-team-item__img";\n  CSSClass["aboutTeamItemName"] = "about-team-item__name";\n  CSSClass["aboutTeamItemGithub"] = "about-team-item__github";\n  CSSClass["aboutTeamItemGithubSvg"] = "about-team-item__github__svg";\n  CSSClass["aboutTeamItemGithubName"] = "about-team-item__github__name";\n  CSSClass["aboutTeamItemJob"] = "about-team-item__job";\n  CSSClass["aboutTeamItemList"] = "about-team-item__list";\n  CSSClass["aboutTeamItemListItem"] = "about-team-item__list__item";\n  CSSClass["statisticsNoLogin"] = "statistics-nologin";\n  CSSClass["statisticsTitle"] = "statistics-title";\n  CSSClass["statisticsWrapper"] = "statistics-wrapper";\n  CSSClass["statisticsCurDay"] = "canvas-cur-day";\n  CSSClass["statisticsAllDay"] = "canvas-all-day";\n  CSSClass["statisticsTimeForDay"] = "canvas-time-for-day";\n  CSSClass["statisticsTimeForAll"] = "canvas-time-for-all";\n})(CSSClass || (CSSClass = {}));\n\nvar AuthorizationText;\n\n(function (AuthorizationText) {\n  AuthorizationText["mistakeUser"] = "\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u0441 \\u0442\\u0430\\u043A\\u0438\\u043C email \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D!";\n  AuthorizationText["invalidEmail"] = "\\u041D\\u0435\\u043A\\u043E\\u0440\\u0440\\u0435\\u043A\\u0442\\u043D\\u044B\\u0439 email!";\n  AuthorizationText["incorrectPassword"] = "\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C!";\n  AuthorizationText["shortPassword"] = "\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0431\\u044B\\u0442\\u044C \\u043D\\u0435 \\u043C\\u0435\\u043D\\u0435\\u0435 8 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432!";\n  AuthorizationText["existsEmail"] = "\\u0422\\u0430\\u043A\\u043E\\u0439 email \\u0443\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D";\n})(AuthorizationText || (AuthorizationText = {}));\n\nvar AudioGameText;\n\n(function (AudioGameText) {\n  AudioGameText["name"] = "\\u0430\\u0443\\u0434\\u0438\\u043E\\u0432\\u044B\\u0437\\u043E\\u0432";\n  AudioGameText["description"] = "\\xAB\\u0410\\u0443\\u0434\\u0438\\u043E\\u0432\\u044B\\u0437\\u043E\\u0432\\xBB - \\u044D\\u0442\\u043E \\u0442\\u0440\\u0435\\u043D\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430, \\u043A\\u043E\\u0442\\u043E\\u0440\\u0430\\u044F \\u0443\\u043B\\u0443\\u0447\\u0448\\u0430\\u0435\\u0442 \\u0432\\u043E\\u0441\\u043F\\u0440\\u0438\\u044F\\u0442\\u0438\\u0435 \\u0440\\u0435\\u0447\\u0438 \\u043D\\u0430 \\u0441\\u043B\\u0443\\u0445.";\n  AudioGameText["descriptionControlMouse"] = "\\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0439\\u0442\\u0435 \\u043C\\u044B\\u0448\\u044C, \\u0447\\u0442\\u043E\\u0431\\u044B \\u0432\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C.";\n  AudioGameText["descriptionControlKey"] = "\\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0439\\u0442\\u0435 \\u0446\\u0438\\u0444\\u0440\\u043E\\u0432\\u044B\\u0435 \\u043A\\u043B\\u0430\\u0432\\u0438\\u0448\\u0438 \\u043E\\u0442 1 \\u0434\\u043E 5 \\u0434\\u043B\\u044F \\u0432\\u044B\\u0431\\u043E\\u0440\\u0430 \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430";\n  AudioGameText["descriptionControlReplayingVoice"] = "\\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0439\\u0442\\u0435 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B \\u0434\\u043B\\u044F \\u043F\\u043E\\u0432\\u0442\\u043E\\u0440\\u043D\\u043E\\u0433\\u043E \\u0437\\u0432\\u0443\\u0447\\u0430\\u043D\\u0438\\u044F \\u0441\\u043B\\u043E\\u0432\\u0430";\n  AudioGameText["descriptionControlHint"] = "\\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0439\\u0442\\u0435 \\u043A\\u043B\\u0430\\u0432\\u0438\\u0448\\u0443 Enter \\u0434\\u043B\\u044F \\u043F\\u043E\\u0434\\u0441\\u043A\\u0430\\u0437\\u043A\\u0438 \\u0438\\u043B\\u0438 \\u0434\\u043B\\u044F \\u043F\\u0435\\u0440\\u0435\\u0445\\u043E\\u0434\\u0430 \\u043A \\u0441\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0435\\u043C\\u0443 \\u0441\\u043B\\u043E\\u0432\\u0443";\n  AudioGameText["startButton"] = "\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C";\n})(AudioGameText || (AudioGameText = {}));\n\nvar SprintGameText;\n\n(function (SprintGameText) {\n  SprintGameText["name"] = "\\u0441\\u043F\\u0440\\u0438\\u043D\\u0442";\n  SprintGameText["description"] = "\\xAB\\u0421\\u043F\\u0440\\u0438\\u043D\\u0442\\xBB - \\u044D\\u0442\\u043E \\u0442\\u0440\\u0435\\u043D\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430 \\u0434\\u043B\\u044F \\u043F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0435\\u043D\\u0438\\u044F \\u0437\\u0430\\u0443\\u0447\\u0435\\u043D\\u043D\\u044B\\u0445 \\u0441\\u043B\\u043E\\u0432 \\u0438\\u0437 \\u0432\\u0430\\u0448\\u0435\\u0433\\u043E \\u0441\\u043B\\u043E\\u0432\\u0430\\u0440\\u044F.";\n  SprintGameText["descriptionControlMouse"] = "\\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0439\\u0442\\u0435 \\u043C\\u044B\\u0448\\u044C, \\u0447\\u0442\\u043E\\u0431\\u044B \\u0432\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C.";\n  SprintGameText["descriptionControlKey"] = "\\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0439\\u0442\\u0435 \\u043A\\u043B\\u0430\\u0432\\u0438\\u0448\\u0438 \\u0432\\u043B\\u0435\\u0432\\u043E \\u0438\\u043B\\u0438 \\u0432\\u043F\\u0440\\u0430\\u0432\\u043E";\n  SprintGameText["startButton"] = "\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C";\n})(SprintGameText || (SprintGameText = {}));\n\nvar HTMLPageFreeText;\n\n(function (HTMLPageFreeText) {\n  HTMLPageFreeText["headerLogo"] = "RSlang";\n  HTMLPageFreeText["footerYear"] = "2022";\n  HTMLPageFreeText["urlToRSSchool"] = "https://rs.school/js/";\n})(HTMLPageFreeText || (HTMLPageFreeText = {}));\n\nvar MainPageText;\n\n(function (MainPageText) {\n  MainPageText["mainPageTitle"] = "RSLang";\n  MainPageText["mainPageText"] = "\\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0439 \\u0431\\u044B\\u0441\\u0442\\u0440\\u044B\\u0439 \\u0438 \\u044D\\u0444\\u0444\\u0435\\u043A\\u0442\\u0438\\u0432\\u043D\\u044B\\u0439 \\u0441\\u043F\\u043E\\u0441\\u043E\\u0431\\n  \\u0438\\u0437\\u0443\\u0447\\u0435\\u043D\\u0438\\u044F \\u0430\\u043D\\u0433\\u043B\\u0438\\u0439\\u0441\\u043A\\u043E\\u0433\\u043E \\u044F\\u0437\\u044B\\u043A\\u0430.<br> \\u0412\\u0441\\u0435 \\u0441\\u0430\\u043C\\u044B\\u0435 \\u043B\\u0443\\u0447\\u0448\\u0438\\u0435 \\u043C\\u0435\\u0442\\u043E\\u0434\\u0438\\u043A\\u0438 \\u0432 \\u043E\\u0434\\u043D\\u043E\\u043C \\u043C\\u0435\\u0441\\u0442\\u0435.";\n  MainPageText["mainPageTextForUser"] = "Hello ";\n})(MainPageText || (MainPageText = {}));\n\nvar FooterGithubUser;\n\n(function (FooterGithubUser) {\n  FooterGithubUser["nameMax"] = "\\u041C\\u0430\\u043A\\u0441\\u0438\\u043C \\u041B\\u0430\\u043F\\u043A\\u043E";\n  FooterGithubUser["nameGithubMax"] = "maxlmysim";\n  FooterGithubUser["urlToGitHubeMax"] = "https://github.com/maxlmysim";\n  FooterGithubUser["nameAnatoli"] = "\\u0410\\u043D\\u0430\\u0442\\u043E\\u043B\\u0438\\u0439 \\u0413\\u043E\\u0440\\u0430\\u043B\\u044C\\u0447\\u0443\\u043A";\n  FooterGithubUser["nameGithubAnatoli"] = "AnatoliHaralchuk";\n  FooterGithubUser["urlToGitHubeAnatoli"] = "https://github.com/AnatoliHaralchuk";\n  FooterGithubUser["nameIlya"] = "\\u0418\\u043B\\u044C\\u044F \\u041C\\u0430\\u0445\\u043D\\u0430\\u0447";\n  FooterGithubUser["nameGithubIlya"] = "Naysa3r";\n  FooterGithubUser["urlToGitHubeIlya"] = "https://github.com/naysa3r";\n})(FooterGithubUser || (FooterGithubUser = {}));\n\nvar AboutPtojectText;\n\n(function (AboutPtojectText) {\n  AboutPtojectText["title"] = "\\u041E \\u041F\\u0420\\u041E\\u0415\\u041A\\u0422\\u0415";\n  AboutPtojectText["text"] = "\\u041F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0434\\u043B\\u044F \\u0438\\u0437\\u0443\\u0447\\u0435\\u043D\\u0438\\u044F \\u0438\\u043D\\u043E\\u0441\\u0442\\u0440\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0441\\u043B\\u043E\\u0432 \\u0441 \\u0442\\u0435\\u0445\\u043D\\u0438\\u043A\\u043E\\u0439 \\u0438\\u043D\\u0442\\u0435\\u0440\\u0432\\u0430\\u043B\\u044C\\u043D\\u043E\\u0433\\u043E \\u043F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0435\\u043D\\u0438\\u044F,\\n  \\u043E\\u0442\\u0441\\u043B\\u0435\\u0436\\u0438\\u0432\\u0430\\u043D\\u0438\\u044F \\u0438\\u043D\\u0434\\u0438\\u0432\\u0438\\u0434\\u0443\\u0430\\u043B\\u044C\\u043D\\u043E\\u0433\\u043E \\u043F\\u0440\\u043E\\u0433\\u0440\\u0435\\u0441\\u0441\\u0430 \\u0438 \\u043C\\u0438\\u043D\\u0438-\\u0438\\u0433\\u0440.";\n  AboutPtojectText["ebookText"] = "\\u0412\\u043E\\u0437\\u043C\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C \\u0438\\u0437\\u0443\\u0447\\u0430\\u0442\\u044C \\u0441\\u043B\\u043E\\u0432\\u0430 \\u0440\\u0430\\u0437\\u043D\\u043E\\u0433\\u043E \\u0443\\u0440\\u043E\\u0432\\u043D\\u044F,<br>\\n  \\u043E\\u0442\\u043C\\u0435\\u0447\\u0430\\u0442\\u044C \\u0441\\u043B\\u043E\\u0436\\u043D\\u044B\\u0435 \\u0438 \\u043F\\u043E\\u0434\\u0443\\u0447\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0435 \\u0437\\u043D\\u0430\\u043D\\u0438\\u044F";\n  AboutPtojectText["dictionaryText"] = "\\u0412\\u043E\\u0437\\u043C\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C \\u0438\\u0437\\u0443\\u0447\\u0435\\u043D\\u0438\\u044F \\u043D\\u0435\\u0438\\u0437\\u0432\\u0435\\u0441\\u0442\\u043D\\u044B\\u0445,<br>\\n  \\u0438\\u043B\\u0438 \\u0442\\u0440\\u0443\\u0434\\u043D\\u043E\\u0437\\u0430\\u043F\\u043E\\u043C\\u0438\\u043D\\u0430\\u0435\\u043C\\u044B\\u0445 \\u043F\\u043E \\u0434\\u0440\\u0443\\u0433\\u043E\\u0439 \\u0441\\u0445\\u0435\\u043C\\u0435";\n  AboutPtojectText["gameText"] = "\\u0418\\u0433\\u0440\\u044B \\u043F\\u043E\\u0437\\u0432\\u043E\\u043B\\u044F\\u044E\\u0442 \\u043F\\u0440\\u043E\\u0432\\u0435\\u0441\\u0442\\u0438 \\u0432\\u0440\\u0435\\u043C\\u044F \\u043D\\u0435 \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0432 \\u0443\\u0434\\u043E\\u0432\\u043E\\u043B\\u044C\\u0441\\u0442\\u0432\\u0438\\u0435,\\n  \\u043D\\u043E \\u0438 \\u0441 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0439";\n  AboutPtojectText["statisticsText"] = "\\u041C\\u043E\\u0436\\u043D\\u043E \\u043B\\u0435\\u0433\\u043A\\u043E \\u043E\\u0446\\u0435\\u043D\\u0438\\u0432\\u0430\\u0442\\u044C \\u0441\\u0432\\u043E\\u0439\\n  \\u0443\\u0440\\u043E\\u0432\\u0435\\u043D\\u044C \\u0437\\u043D\\u0430\\u043D\\u0438\\u0439 \\u043F\\u043E \\u0441\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0435";\n  AboutPtojectText["aboutProjectBtn"] = "\\u041D\\u0430\\u0437\\u0430\\u0434";\n  AboutPtojectText["aboutProjectYoutube"] = "\\u0412\\u0438\\u0434\\u0435\\u043E";\n  AboutPtojectText["youtubeFrame"] = "<iframe width=\\"560\\" height=\\"315\\"\\n  src=\\"https://www.youtube.com/embed/-WR5EEl5YyE\\"\\n  title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay;\\n  clipboard-write; encrypted-media; gyroscope; picture-in-picture\\"\\n  allowfullscreen></iframe>";\n})(AboutPtojectText || (AboutPtojectText = {}));\n\nvar AboutTeamText;\n\n(function (AboutTeamText) {\n  AboutTeamText["maxFoto"] = "<img src = \\"./assets/img/MaxLapko.jpg\\" alt = \\"MaxFoto\\">";\n  AboutTeamText["anatoliFoto"] = "<img src = \\"./assets/img/AnatoliHaralchuk.jpg\\" alt = \\"AnatoliFoto\\">";\n  AboutTeamText["ilyaFoto"] = "<img src = \\"./assets/img/IlyaMahnach.jpg\\" alt = \\"IlyaFoto\\">";\n  AboutTeamText["aboutTeamTitle"] = "\\u041D\\u0430\\u0434 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u043E\\u043C \\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u043B\\u0438:";\n  AboutTeamText["jobDev"] = "\\u0420\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u0447\\u0438\\u043A";\n  AboutTeamText["jobTeamLead"] = "\\u0422\\u0438\\u043C \\u043B\\u0438\\u0434";\n})(AboutTeamText || (AboutTeamText = {}));\n\nvar StatisticsText;\n\n(function (StatisticsText) {\n  StatisticsText["noLogin"] = "\\u041A \\u0441\\u043E\\u0436\\u0430\\u043B\\u0435\\u043D\\u0438\\u044E, \\u0434\\u0430\\u043D\\u043D\\u0430\\u044F \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \\u043D\\u0435 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u0430.\\n  \\u041D\\u0435\\u043E\\u0431\\u0445\\u043E\\u0434\\u0438\\u043C\\u043E \\u0430\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F!";\n})(StatisticsText || (StatisticsText = {}));\n;// CONCATENATED MODULE: ./script/authorization/user.ts\n\n\nvar userInfo = {\n  login: false,\n  token: \'\',\n  refreshToken: \'\',\n  name: \'\',\n  userId: \'\'\n};\nvar userFromLocalStorage = localStorage.getItem(\'userInfo\');\n\nif (userFromLocalStorage) {\n  var userSettings = JSON.parse(userFromLocalStorage);\n  Object.assign(userInfo, userSettings);\n}\n\nfunction saveUserInLocalStorage(userSettings) {\n  localStorage.setItem(\'userInfo\', JSON.stringify(userSettings));\n}\n\nfunction changeLogoAuthorization() {\n  var logo = document.querySelector(".".concat(CSSClass.authorizationLogo));\n\n  if (logo) {\n    if (userInfo.login) {\n      var img = createImg(\'./assets/svg/logout.svg\', CSSClass.authorizationSVG, \'logOut\');\n      logo.innerHTML = \'\';\n      logo.append(img);\n    } else {\n      var _img = createImg(\'./assets/svg/Login.svg\', CSSClass.authorizationSVG, \'logIn\');\n\n      logo.innerHTML = \'\';\n      logo.append(_img);\n    }\n  }\n}\n\nfunction logoutUser() {\n  Object.assign(userInfo, {\n    login: false,\n    token: \'\',\n    refreshToken: \'\',\n    name: \'\',\n    userId: \'\'\n  });\n  localStorage.removeItem(\'userInfo\');\n  changeLogoAuthorization();\n}\nfunction user_singInUser(userSettings) {\n  userInfo.login = true;\n  Object.assign(userInfo, userSettings);\n  saveUserInLocalStorage(userSettings);\n  changeLogoAuthorization();\n}\nfunction singInUserAndUpdateToken(newTokens) {\n  var userLocalStorage = localStorage.getItem(\'userInfo\');\n  var user;\n\n  if (userLocalStorage) {\n    user = JSON.parse(userLocalStorage);\n  }\n\n  Object.assign(user, newTokens);\n  user_singInUser(user);\n}\n;// CONCATENATED MODULE: ./script/view/components/header.ts\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\nvar Header = /*#__PURE__*/function () {\n  function Header() {\n    _classCallCheck(this, Header);\n  }\n\n  _createClass(Header, [{\n    key: "create",\n    value: function create() {\n      var header = createTag(\'header\', CSSClass.header);\n      var wrapper = createTag(\'div\', CSSClass.headerWrapper);\n      var logo = createTag(\'div\', CSSClass.headerLogo, HTMLPageFreeText.headerLogo);\n      logo.addEventListener(\'click\', function () {\n        window.location.hash = IdPages.main;\n      });\n      wrapper.append(this.burger(), logo, this.authorization());\n      header.append(wrapper);\n      return header;\n    }\n  }, {\n    key: "burger",\n    value: function burger() {\n      var _this = this;\n\n      var burgerSVG = createTag(\'div\', CSSClass.headerSVG);\n      burgerSVG.innerHTML = \'<img src = "./assets/svg/menuBurger.svg" alt = "burger">\';\n      var burger = createTag(\'div\', CSSClass.headerBurger);\n      burger.append(burgerSVG);\n      burger.addEventListener(\'click\', function (event) {\n        return _this.openMenu(event);\n      });\n      return burger;\n    }\n  }, {\n    key: "authorization",\n    value: function authorization() {\n      var authorization = createTag(\'div\', CSSClass.headerAuthorization);\n      var authorizationButton = createTag(\'a\', CSSClass.authorizationLogo);\n\n      if (userInfo.login) {\n        var img = createImg(\'./assets/svg/logout.svg\', CSSClass.authorizationSVG, \'logOut\');\n        authorizationButton.append(img);\n        authorizationButton.href = "#".concat(IdPages.login);\n\n        authorization.onclick = function () {\n          return logoutUser();\n        };\n      } else {\n        var _img = createImg(\'./assets/svg/Login.svg\', CSSClass.authorizationSVG, \'logIn\');\n\n        authorizationButton.append(_img);\n        authorizationButton.href = "#".concat(IdPages.login);\n      }\n\n      authorization.append(authorizationButton);\n      return authorization;\n    }\n  }, {\n    key: "openMenu",\n    value: function openMenu(event) {\n      var burger = event.currentTarget;\n      var header = document.querySelector(".".concat(CSSClass.header));\n      var headerLogo = document.querySelector(".".concat(CSSClass.headerLogo));\n      var closeBurger = document.querySelector(".".concat(CSSClass.closeBurger));\n      var mainContainer = document.querySelector(".".concat(CSSClass.mainContainer));\n      burger.style.display = \'none\';\n      closeBurger.style.display = \'flex\';\n      headerLogo.style.margin = \'auto auto auto 1rem\';\n      header.classList.add(CSSClass.headerShift);\n      mainContainer.classList.add(CSSClass.mainContainerShift);\n    }\n  }]);\n\n  return Header;\n}();\n;// CONCATENATED MODULE: ./script/helper/buttonAnimation.ts\nfunction buttonAnimation_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction buttonAnimation_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction buttonAnimation_createClass(Constructor, protoProps, staticProps) { if (protoProps) buttonAnimation_defineProperties(Constructor.prototype, protoProps); if (staticProps) buttonAnimation_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\nvar ButtonAnimation = /*#__PURE__*/function () {\n  function ButtonAnimation() {\n    buttonAnimation_classCallCheck(this, ButtonAnimation);\n  }\n\n  buttonAnimation_createClass(ButtonAnimation, [{\n    key: "addButtonClass",\n    value: function addButtonClass(event) {\n      var btn = event.currentTarget;\n      var curBtn = event.target;\n      var x = event.offsetX;\n      var y = event.offsetY;\n\n      if (curBtn.classList.contains(\'item__name\')) {\n        x = event.offsetX + curBtn.offsetLeft;\n      }\n\n      var circle = createTag(\'div\', [\'circle\', \'grow\']);\n      circle.style.left = "".concat(x, "px");\n      circle.style.top = "".concat(y, "px");\n      btn.append(circle);\n    }\n  }]);\n\n  return ButtonAnimation;\n}();\n;// CONCATENATED MODULE: ./script/view/components/mainNavigation.ts\nfunction mainNavigation_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction mainNavigation_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction mainNavigation_createClass(Constructor, protoProps, staticProps) { if (protoProps) mainNavigation_defineProperties(Constructor.prototype, protoProps); if (staticProps) mainNavigation_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\nvar Navigation = /*#__PURE__*/function () {\n  function Navigation() {\n    mainNavigation_classCallCheck(this, Navigation);\n  }\n\n  mainNavigation_createClass(Navigation, [{\n    key: "creat",\n    value: function creat() {\n      var _this = this;\n\n      var wrapper = createTag(\'div\', CSSClass.navItems);\n      var svg = \'<img src = "./assets/svg/closeBurger.svg">\';\n      var closeBurger = createTag(\'div\', CSSClass.closeBurger, svg);\n      var main = this.createItem(NamePages.main, IdPages.main, "./assets/svg/".concat(IdPages.main, ".svg"));\n      var ebook = this.createItem(NamePages.ebook, IdPages.ebook, "./assets/svg/".concat(IdPages.ebook, ".svg"));\n      var dictionary = this.createItem(NamePages.dictionary, IdPages.dictionary, "./assets/svg/".concat(IdPages.dictionary, ".svg"));\n      var games = this.createItem(NamePages.games, IdPages.games, "./assets/svg/".concat(IdPages.games, ".svg"));\n      var statistics = this.createItem(NamePages.statistics, IdPages.statistics, "./assets/svg/".concat(IdPages.statistics, ".svg"));\n      var about = this.createItem(NamePages.aboutTeam, IdPages.aboutTeam, "./assets/svg/".concat(IdPages.aboutTeam, ".svg"));\n      var review = this.createItem(NamePages.review, IdPages.review, "./assets/svg/".concat(IdPages.review, ".svg"));\n      var buttons = [main, ebook, dictionary, games, statistics, about, review];\n      wrapper.append.apply(wrapper, [closeBurger].concat(buttons));\n      buttons.forEach(function (elem) {\n        elem.addEventListener(\'mousedown\', function (event) {\n          return new ButtonAnimation().addButtonClass(event);\n        });\n      });\n      closeBurger.addEventListener(\'click\', function (event) {\n        return _this.closeMenu(event);\n      });\n      return wrapper;\n    }\n  }, {\n    key: "createItem",\n    value: function createItem(name, idPage, pathIcon) {\n      var wrapper = createTag(\'a\', CSSClass.navItem);\n      wrapper.href = "#".concat(idPage);\n      var svg = "<img src = ".concat(pathIcon, " alt = ").concat(idPage, ">");\n      var itemIcon = createTag(\'div\', CSSClass.navItemIcon, svg);\n      var itemName = createTag(\'div\', CSSClass.navItemName, name);\n      wrapper.append(itemIcon, itemName);\n      return wrapper;\n    }\n  }, {\n    key: "closeMenu",\n    value: function closeMenu(event) {\n      var closeBurger = event.currentTarget;\n      var header = document.querySelector(".".concat(CSSClass.header));\n      var headerLogo = document.querySelector(".".concat(CSSClass.headerLogo));\n      var Burger = document.querySelector(".".concat(CSSClass.headerBurger));\n      var mainContainer = document.querySelector(".".concat(CSSClass.mainContainer));\n      Burger.style.display = \'flex\';\n      closeBurger.style.display = \'none\';\n      headerLogo.style.margin = \'auto\';\n      header.classList.remove(CSSClass.headerShift);\n      mainContainer.classList.remove(CSSClass.mainContainerShift);\n    }\n  }]);\n\n  return Navigation;\n}();\n;// CONCATENATED MODULE: ./script/view/pages/mainPage/mainPage.ts\nfunction mainPage_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction mainPage_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction mainPage_createClass(Constructor, protoProps, staticProps) { if (protoProps) mainPage_defineProperties(Constructor.prototype, protoProps); if (staticProps) mainPage_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\nvar MainPage = /*#__PURE__*/function () {\n  function MainPage() {\n    mainPage_classCallCheck(this, MainPage);\n  }\n\n  mainPage_createClass(MainPage, [{\n    key: "create",\n    value: function create() {\n      var wrapper = createTag(\'div\', IdPages.main, \'\');\n      var title = createTag(\'h1\', CSSClass.mainPageTitle, MainPageText.mainPageTitle);\n\n      if (!userInfo.login) {\n        var text = createTag(\'p\', CSSClass.mainPageText, MainPageText.mainPageText);\n        var loginBtn = this.createBtn(NamePages.login, IdPages.login);\n        var aboutProjectBtn = this.createBtn(NamePages.aboutProject, IdPages.aboutProject);\n        wrapper.append(title, text, loginBtn, aboutProjectBtn);\n      } else {\n        var firstName = userInfo.name[0].toUpperCase() + userInfo.name.slice(1);\n\n        var _text = createTag(\'p\', CSSClass.mainPageText, MainPageText.mainPageTextForUser + firstName);\n\n        var _aboutProjectBtn = this.createBtn(NamePages.aboutProject, IdPages.aboutProject);\n\n        wrapper.append(title, _text, _aboutProjectBtn);\n      }\n\n      return wrapper;\n    }\n  }, {\n    key: "createBtn",\n    value: function createBtn(name, idPage) {\n      var wrapper = createTag(\'a\', CSSClass.mainPageBtn, name);\n      wrapper.href = "#".concat(idPage);\n      return wrapper;\n    }\n  }]);\n\n  return MainPage;\n}();\n;// CONCATENATED MODULE: ./script/view/components/main.ts\nfunction main_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction main_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction main_createClass(Constructor, protoProps, staticProps) { if (protoProps) main_defineProperties(Constructor.prototype, protoProps); if (staticProps) main_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\nvar Main = /*#__PURE__*/function () {\n  function Main() {\n    main_classCallCheck(this, Main);\n  }\n\n  main_createClass(Main, [{\n    key: "create",\n    value: function create() {\n      var main = createTag(\'main\', CSSClass.main);\n      var wrapper = createTag(\'div\', CSSClass.mainWrapper);\n      var wrapperMain = createTag(\'div\', CSSClass.mainContainer);\n      wrapperMain.append(new MainPage().create());\n      wrapper.append(new Navigation().creat(), wrapperMain);\n      main.append(wrapper);\n      return main;\n    }\n  }]);\n\n  return Main;\n}();\n;// CONCATENATED MODULE: ./script/view/components/footer.ts\nfunction footer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction footer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction footer_createClass(Constructor, protoProps, staticProps) { if (protoProps) footer_defineProperties(Constructor.prototype, protoProps); if (staticProps) footer_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\nvar Footer = /*#__PURE__*/function () {\n  function Footer() {\n    footer_classCallCheck(this, Footer);\n  }\n\n  footer_createClass(Footer, [{\n    key: "create",\n    value: function create() {\n      var footer = createTag(\'footer\', CSSClass.footer);\n      var wrapper = createTag(\'div\', CSSClass.footerWrapper);\n      var year = createTag(\'div\', CSSClass.footerYear, HTMLPageFreeText.footerYear);\n      wrapper.append(this.rsSchool(), this.gitHubs(), year);\n      footer.append(wrapper);\n      return footer;\n    }\n  }, {\n    key: "rsSchool",\n    value: function rsSchool() {\n      var rsSchool = createTag(\'div\', CSSClass.footerRSSchool);\n      var url = createTag(\'a\', CSSClass.footerLink);\n      url.innerHTML = \'<img src = "./assets/svg/rs_school_js.svg" alt = "rsSchool">\';\n      url.href = HTMLPageFreeText.urlToRSSchool;\n      rsSchool.append(url);\n      return rsSchool;\n    }\n  }, {\n    key: "gitHubs",\n    value: function gitHubs() {\n      var gitHubs = createTag(\'div\', CSSClass.footerGithub);\n      var url1 = createTag(\'a\', CSSClass.footerLink, FooterGithubUser.nameMax);\n      url1.target = \'_blank\';\n      url1.href = FooterGithubUser.urlToGitHubeMax;\n      var url2 = createTag(\'a\', CSSClass.footerLink, FooterGithubUser.nameAnatoli);\n      url2.target = \'_blank\';\n      url2.href = FooterGithubUser.urlToGitHubeAnatoli;\n      var url3 = createTag(\'a\', CSSClass.footerLink, FooterGithubUser.nameIlya);\n      url3.target = \'_blank\';\n      url3.href = FooterGithubUser.urlToGitHubeIlya;\n      gitHubs.append(url1, url2, url3);\n      return gitHubs;\n    }\n  }]);\n\n  return Footer;\n}();\n;// CONCATENATED MODULE: ./script/view/viewApp.ts\nfunction viewApp_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction viewApp_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction viewApp_createClass(Constructor, protoProps, staticProps) { if (protoProps) viewApp_defineProperties(Constructor.prototype, protoProps); if (staticProps) viewApp_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\nvar ViewApp = /*#__PURE__*/function () {\n  function ViewApp() {\n    viewApp_classCallCheck(this, ViewApp);\n  }\n\n  viewApp_createClass(ViewApp, [{\n    key: "renderPage",\n    value: function renderPage() {\n      var wrapper = createTag(\'div\', \'wrapper\', \'\');\n      wrapper.append(new Header().create(), new Main().create(), new Footer().create());\n      document.body.append(wrapper);\n    }\n  }]);\n\n  return ViewApp;\n}();\n;// CONCATENATED MODULE: ./script/controller/controller.ts\nfunction controller_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction controller_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction controller_createClass(Constructor, protoProps, staticProps) { if (protoProps) controller_defineProperties(Constructor.prototype, protoProps); if (staticProps) controller_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nvar ControllerApp = /*#__PURE__*/function () {\n  function ControllerApp() {\n    controller_classCallCheck(this, ControllerApp);\n  }\n\n  controller_createClass(ControllerApp, [{\n    key: "startPage",\n    value: function startPage(callback) {\n      callback();\n    }\n  }, {\n    key: "openPage",\n    value: function openPage(view, render) {\n      var mainContent = document.querySelector(\'.main-container\');\n      mainContent.innerHTML = \'\';\n      mainContent.append(view);\n      if (render) render();\n    }\n  }]);\n\n  return ControllerApp;\n}();\n;// CONCATENATED MODULE: ./script/server/server.ts\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'throw\' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction server_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction server_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction server_createClass(Constructor, protoProps, staticProps) { if (protoProps) server_defineProperties(Constructor.prototype, protoProps); if (staticProps) server_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\nvar Server = /*#__PURE__*/function () {\n  function Server() {\n    server_classCallCheck(this, Server);\n\n    this.port = \'https://learwords.herokuapp.com\';\n    this.urlWords = \'/words\';\n    this.urlUsers = \'/users\';\n    this.urlStatistics = \'/statistics\';\n    this.urlSettings = \'/settings\';\n    this.urlSignIn = \'/signin\';\n    this.urlTokens = \'/tokens\';\n    this.urlAggregatedWords = \'/aggregatedWords\';\n  }\n\n  server_createClass(Server, [{\n    key: "checkResponse",\n    value: function () {\n      var _checkResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(response) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!response.ok) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt("return", response.json());\n\n              case 2:\n                return _context.abrupt("return", Promise.reject(response));\n\n              case 3:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function checkResponse(_x) {\n        return _checkResponse.apply(this, arguments);\n      }\n\n      return checkResponse;\n    }()\n  }, {\n    key: "getAllWords",\n    value: function () {\n      var _getAllWords = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var group,\n            page,\n            _args2 = arguments;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                group = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : 0;\n                page = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : 0;\n                return _context2.abrupt("return", fetch("".concat(this.port).concat(this.urlWords, "?group=").concat(group, "&page=").concat(page)).then(function (response) {\n                  return response.json();\n                }));\n\n              case 3:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getAllWords() {\n        return _getAllWords.apply(this, arguments);\n      }\n\n      return getAllWords;\n    }()\n  }, {\n    key: "getWord",\n    value: function () {\n      var _getWord = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(idWord) {\n        var _this = this;\n\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt("return", fetch("".concat(this.port).concat(this.urlWords, "/").concat(idWord)).then(function (response) {\n                  return _this.checkResponse(response);\n                }));\n\n              case 1:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getWord(_x2) {\n        return _getWord.apply(this, arguments);\n      }\n\n      return getWord;\n    }()\n  }, {\n    key: "createNewUser",\n    value: function () {\n      var _createNewUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(user) {\n        var _this2 = this;\n\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt("return", fetch("".concat(this.port).concat(this.urlUsers), {\n                  method: \'POST\',\n                  headers: {\n                    \'Content-Type\': \'application/json\'\n                  },\n                  body: JSON.stringify(user)\n                }).then(function (response) {\n                  return _this2.checkResponse(response);\n                }));\n\n              case 1:\n              case "end":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function createNewUser(_x3) {\n        return _createNewUser.apply(this, arguments);\n      }\n\n      return createNewUser;\n    }()\n  }, {\n    key: "getUser",\n    value: function () {\n      var _getUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _this3 = this;\n\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt("return", fetch("".concat(this.port).concat(this.urlUsers, "/").concat(userInfo.userId), {\n                  method: \'GET\',\n                  headers: {\n                    Authorization: "Bearer ".concat(userInfo.token),\n                    Accept: \'application/json\',\n                    \'Content-Type\': \'application/json\'\n                  }\n                }).then(function (response) {\n                  return _this3.checkResponse(response);\n                }));\n\n              case 1:\n              case "end":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getUser() {\n        return _getUser.apply(this, arguments);\n      }\n\n      return getUser;\n    }()\n  }, {\n    key: "getUserAllWords",\n    value: function () {\n      var _getUserAllWords = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt("return", fetch("".concat(this.port).concat(this.urlUsers, "/").concat(userInfo.userId).concat(this.urlWords), {\n                  method: \'GET\',\n                  headers: {\n                    Authorization: "Bearer ".concat(userInfo.token),\n                    Accept: \'application/json\',\n                    \'Content-Type\': \'application/json\'\n                  }\n                }).then(function (response) {\n                  if (response.ok) {\n                    return response.json();\n                  }\n\n                  return Promise.reject(response);\n                }));\n\n              case 1:\n              case "end":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getUserAllWords() {\n        return _getUserAllWords.apply(this, arguments);\n      }\n\n      return getUserAllWords;\n    }()\n  }, {\n    key: "getUserWord",\n    value: function () {\n      var _getUserWord = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(idWord) {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt("return", fetch("".concat(this.port).concat(this.urlUsers, "/").concat(userInfo.userId).concat(this.urlWords, "/").concat(idWord), {\n                  method: \'GET\',\n                  headers: {\n                    Authorization: "Bearer ".concat(userInfo.token),\n                    Accept: \'application/json\',\n                    \'Content-Type\': \'application/json\'\n                  }\n                }));\n\n              case 1:\n              case "end":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getUserWord(_x4) {\n        return _getUserWord.apply(this, arguments);\n      }\n\n      return getUserWord;\n    }()\n  }, {\n    key: "createUserWord",\n    value: function () {\n      var _createUserWord = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(idWord, wordSettings) {\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                return _context8.abrupt("return", fetch("".concat(this.port).concat(this.urlUsers, "/").concat(userInfo.userId).concat(this.urlWords, "/").concat(idWord), {\n                  method: \'POST\',\n                  headers: {\n                    Authorization: "Bearer ".concat(userInfo.token),\n                    Accept: \'application/json\',\n                    \'Content-Type\': \'application/json\'\n                  },\n                  body: JSON.stringify(wordSettings)\n                }).then(function (response) {\n                  if (response.ok) {\n                    return response.json();\n                  }\n\n                  if (response.status === 417) {\n                    console.log(\'Слово уже было записано\');\n                  }\n\n                  return Promise.reject(response);\n                }));\n\n              case 1:\n              case "end":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function createUserWord(_x5, _x6) {\n        return _createUserWord.apply(this, arguments);\n      }\n\n      return createUserWord;\n    }()\n  }, {\n    key: "updateUserWord",\n    value: function () {\n      var _updateUserWord = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(idWord, wordSettings) {\n        var _this4 = this;\n\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                return _context9.abrupt("return", fetch("".concat(this.port).concat(this.urlUsers, "/").concat(userInfo.userId).concat(this.urlWords, "/").concat(idWord), {\n                  method: \'PUT\',\n                  headers: {\n                    Authorization: "Bearer ".concat(userInfo.token),\n                    Accept: \'application/json\',\n                    \'Content-Type\': \'application/json\'\n                  },\n                  body: JSON.stringify(wordSettings)\n                }).then(function (response) {\n                  return _this4.checkResponse(response);\n                }));\n\n              case 1:\n              case "end":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function updateUserWord(_x7, _x8) {\n        return _updateUserWord.apply(this, arguments);\n      }\n\n      return updateUserWord;\n    }()\n  }, {\n    key: "deleteUserWord",\n    value: function () {\n      var _deleteUserWord = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(idWord) {\n        var _this5 = this;\n\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                return _context10.abrupt("return", fetch("".concat(this.port).concat(this.urlUsers, "/").concat(userInfo.userId).concat(this.urlWords, "/").concat(idWord), {\n                  method: \'DELETE\',\n                  headers: {\n                    Authorization: "Bearer ".concat(userInfo.token),\n                    Accept: \'application/json\',\n                    \'Content-Type\': \'application/json\'\n                  }\n                }).then(function (response) {\n                  return _this5.checkResponse(response);\n                }));\n\n              case 1:\n              case "end":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function deleteUserWord(_x9) {\n        return _deleteUserWord.apply(this, arguments);\n      }\n\n      return deleteUserWord;\n    }()\n  }, {\n    key: "getUserAggregatedWord",\n    value: function () {\n      var _getUserAggregatedWord = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(idWord, option) {\n        var _this6 = this;\n\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                return _context11.abrupt("return", fetch("".concat(this.port).concat(this.urlUsers, "/").concat(userInfo.userId).concat(this.urlAggregatedWords, "/").concat(idWord, "?filter=").concat(option), {\n                  method: \'GET\',\n                  headers: {\n                    Authorization: "Bearer ".concat(userInfo.token),\n                    Accept: \'application/json\',\n                    \'Content-Type\': \'application/json\'\n                  }\n                }).then(function (response) {\n                  return _this6.checkResponse(response);\n                }));\n\n              case 1:\n              case "end":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function getUserAggregatedWord(_x10, _x11) {\n        return _getUserAggregatedWord.apply(this, arguments);\n      }\n\n      return getUserAggregatedWord;\n    }()\n  }, {\n    key: "getUserAggregatedAllWords",\n    value: function () {\n      var _getUserAggregatedAllWords = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(filter) {\n        var _this7 = this;\n\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                return _context12.abrupt("return", fetch("".concat(this.port).concat(this.urlUsers, "/").concat(userInfo.userId).concat(this.urlAggregatedWords, "?filter=").concat(filter), {\n                  method: \'GET\',\n                  headers: {\n                    Authorization: "Bearer ".concat(userInfo.token),\n                    Accept: \'application/json\',\n                    \'Content-Type\': \'application/json\'\n                  }\n                }).then(function (response) {\n                  return _this7.checkResponse(response);\n                }));\n\n              case 1:\n              case "end":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function getUserAggregatedAllWords(_x12) {\n        return _getUserAggregatedAllWords.apply(this, arguments);\n      }\n\n      return getUserAggregatedAllWords;\n    }()\n  }, {\n    key: "updateUser",\n    value: function () {\n      var _updateUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(user) {\n        var _this8 = this;\n\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                return _context13.abrupt("return", fetch("".concat(this.port).concat(this.urlUsers, "/").concat(userInfo.userId), {\n                  method: \'POST\',\n                  headers: {\n                    Authorization: "Bearer ".concat(userInfo.token),\n                    Accept: \'application/json\',\n                    \'Content-Type\': \'application/json\'\n                  },\n                  body: JSON.stringify(user)\n                }).then(function (response) {\n                  return _this8.checkResponse(response);\n                }));\n\n              case 1:\n              case "end":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function updateUser(_x13) {\n        return _updateUser.apply(this, arguments);\n      }\n\n      return updateUser;\n    }()\n  }, {\n    key: "deleteUser",\n    value: function () {\n      var _deleteUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {\n        var _this9 = this;\n\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                return _context14.abrupt("return", fetch("".concat(this.port).concat(this.urlUsers, "/").concat(userInfo.userId), {\n                  method: \'DELETE\',\n                  headers: {\n                    Authorization: "Bearer ".concat(userInfo.token),\n                    Accept: \'application/json\',\n                    \'Content-Type\': \'application/json\'\n                  }\n                }).then(function (response) {\n                  return _this9.checkResponse(response);\n                }));\n\n              case 1:\n              case "end":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function deleteUser() {\n        return _deleteUser.apply(this, arguments);\n      }\n\n      return deleteUser;\n    }()\n  }, {\n    key: "updateUserToken",\n    value: function () {\n      var _updateUserToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                return _context15.abrupt("return", fetch("".concat(this.port).concat(this.urlUsers, "/").concat(userInfo.userId).concat(this.urlTokens), {\n                  method: \'GET\',\n                  headers: {\n                    Authorization: "Bearer ".concat(userInfo.refreshToken),\n                    Accept: \'application/json\',\n                    \'Content-Type\': \'application/json\'\n                  }\n                }).then(function (response) {\n                  if (response.ok) {\n                    return response.json();\n                  }\n\n                  return Promise.reject(response);\n                }));\n\n              case 1:\n              case "end":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function updateUserToken() {\n        return _updateUserToken.apply(this, arguments);\n      }\n\n      return updateUserToken;\n    }()\n  }, {\n    key: "signInUser",\n    value: function () {\n      var _signInUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(user) {\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                return _context16.abrupt("return", fetch("".concat(this.port).concat(this.urlSignIn), {\n                  method: \'POST\',\n                  headers: {\n                    \'Content-Type\': \'application/json\'\n                  },\n                  body: JSON.stringify(user)\n                }).then(function (response) {\n                  if (response.ok) {\n                    return response.json();\n                  }\n\n                  return Promise.reject(response);\n                }));\n\n              case 1:\n              case "end":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function signInUser(_x14) {\n        return _signInUser.apply(this, arguments);\n      }\n\n      return signInUser;\n    }()\n  }, {\n    key: "getStatistics",\n    value: function () {\n      var _getStatistics = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                return _context17.abrupt("return", fetch("".concat(this.port).concat(this.urlUsers, "/").concat(userInfo.userId).concat(this.urlStatistics), {\n                  method: \'GET\',\n                  headers: {\n                    Authorization: "Bearer ".concat(userInfo.token),\n                    Accept: \'application/json\',\n                    \'Content-Type\': \'application/json\'\n                  }\n                }));\n\n              case 1:\n              case "end":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function getStatistics() {\n        return _getStatistics.apply(this, arguments);\n      }\n\n      return getStatistics;\n    }()\n  }, {\n    key: "updateStatistics",\n    value: function () {\n      var _updateStatistics = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(statistics) {\n        var _this10 = this;\n\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                return _context18.abrupt("return", fetch("".concat(this.port).concat(this.urlUsers, "/").concat(userInfo.userId).concat(this.urlStatistics), {\n                  method: \'PUT\',\n                  headers: {\n                    Authorization: "Bearer ".concat(userInfo.token),\n                    Accept: \'application/json\',\n                    \'Content-Type\': \'application/json\'\n                  },\n                  body: JSON.stringify(statistics)\n                }).then(function (response) {\n                  return _this10.checkResponse(response);\n                }));\n\n              case 1:\n              case "end":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function updateStatistics(_x15) {\n        return _updateStatistics.apply(this, arguments);\n      }\n\n      return updateStatistics;\n    }()\n  }]);\n\n  return Server;\n}();\n;// CONCATENATED MODULE: ./script/authorization/authorizationController.ts\nfunction authorizationController_typeof(obj) { "@babel/helpers - typeof"; return authorizationController_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, authorizationController_typeof(obj); }\n\nfunction authorizationController_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ authorizationController_regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == authorizationController_typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'throw\' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction authorizationController_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction authorizationController_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { authorizationController_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { authorizationController_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction authorizationController_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction authorizationController_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction authorizationController_createClass(Constructor, protoProps, staticProps) { if (protoProps) authorizationController_defineProperties(Constructor.prototype, protoProps); if (staticProps) authorizationController_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\nvar AuthorizationController = /*#__PURE__*/function () {\n  function AuthorizationController() {\n    authorizationController_classCallCheck(this, AuthorizationController);\n\n    this.server = new Server();\n  }\n\n  authorizationController_createClass(AuthorizationController, [{\n    key: "singInUser",\n    value: function () {\n      var _singInUser2 = authorizationController_asyncToGenerator( /*#__PURE__*/authorizationController_regeneratorRuntime().mark(function _callee(email, password) {\n        return authorizationController_regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.isInputEmpty(email, password)) {\n                  this.server.signInUser({\n                    email: email.value,\n                    password: password.value\n                  }).then(function (data) {\n                    user_singInUser(data);\n\n                    window.location.hash = "#".concat(IdPages.main);\n                  }).catch(function (err) {\n                    if (err.status === 404) {\n                      email.classList.add(CSSClass.warning);\n                      email.after(createTag(\'p\', CSSClass.warningMessage, AuthorizationText.mistakeUser));\n                    }\n\n                    if (err.status === 403) {\n                      password.classList.add(CSSClass.warning);\n                      password.after(createTag(\'p\', CSSClass.warningMessage, AuthorizationText.incorrectPassword));\n                    }\n                  });\n                } else {\n                  this.addWarningEmptyInput(email, password);\n                }\n\n              case 1:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function singInUser(_x, _x2) {\n        return _singInUser2.apply(this, arguments);\n      }\n\n      return singInUser;\n    }()\n  }, {\n    key: "createNewUser",\n    value: function () {\n      var _createNewUser = authorizationController_asyncToGenerator( /*#__PURE__*/authorizationController_regeneratorRuntime().mark(function _callee2(name, email, password) {\n        return authorizationController_regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.isInputEmpty(name, email, password)) {\n                  if (this.isLengthPasswordValid(password)) {\n                    this.server.createNewUser({\n                      name: name.value,\n                      email: email.value,\n                      password: password.value\n                    }).then(function () {\n                      var view = new AuthorizationView();\n                      view.init(view.signInView());\n                    }).catch(function (err) {\n                      if (err.status === 422) {\n                        email.after(createTag(\'p\', CSSClass.warningMessage, AuthorizationText.invalidEmail));\n                      }\n\n                      if (err.status === 417) {\n                        email.after(createTag(\'p\', CSSClass.warningMessage, AuthorizationText.existsEmail));\n                      }\n                    });\n                  } else {\n                    this.addWarningTextInvalidatePassword(password);\n                  }\n                } else {\n                  this.addWarningEmptyInput(name, email, password);\n                }\n\n              case 1:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function createNewUser(_x3, _x4, _x5) {\n        return _createNewUser.apply(this, arguments);\n      }\n\n      return createNewUser;\n    }()\n  }, {\n    key: "addWarningTextInvalidatePassword",\n    value: function addWarningTextInvalidatePassword(password) {\n      password.after(createTag(\'p\', CSSClass.warningMessage, AuthorizationText.shortPassword));\n    }\n  }, {\n    key: "isLengthPasswordValid",\n    value: function isLengthPasswordValid(password) {\n      return password.value.length >= 8;\n    }\n  }, {\n    key: "isInputEmpty",\n    value: function isInputEmpty() {\n      var check = false;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      args.forEach(function (arg) {\n        if (!arg.value) {\n          check = true;\n        }\n      });\n      return check;\n    }\n  }, {\n    key: "addWarningEmptyInput",\n    value: function addWarningEmptyInput() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      args.forEach(function (arg) {\n        if (!arg.value) {\n          arg.classList.add(CSSClass.warning);\n        }\n      });\n    }\n  }]);\n\n  return AuthorizationController;\n}();\n;// CONCATENATED MODULE: ./script/authorization/authorizationView.ts\nfunction authorizationView_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction authorizationView_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction authorizationView_createClass(Constructor, protoProps, staticProps) { if (protoProps) authorizationView_defineProperties(Constructor.prototype, protoProps); if (staticProps) authorizationView_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\nvar AuthorizationView = /*#__PURE__*/function () {\n  function AuthorizationView() {\n    authorizationView_classCallCheck(this, AuthorizationView);\n\n    this.controller = new AuthorizationController();\n  }\n\n  authorizationView_createClass(AuthorizationView, [{\n    key: "init",\n    value: function init() {\n      var elem = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.signInView();\n      var authWrapper = document.querySelector(".".concat(CSSClass.authorization));\n\n      if (authWrapper) {\n        authWrapper.innerHTML = \'\';\n        authWrapper.append(elem);\n        return elem;\n      }\n\n      return elem;\n    }\n  }, {\n    key: "signInView",\n    value: function signInView() {\n      var _this = this;\n\n      var wrapper = createTag(\'div\', CSSClass.authorization);\n      var title = createTag(\'h2\', CSSClass.authorizationTitle, \'вход в аккаунт\');\n      var inputEmail = createInput(\'email\', [CSSClass.authorizationInputEmail, CSSClass.authorizationInput], \'\', \'Email*\');\n      var inputPassword = createInput(\'password\', [CSSClass.authorizationInputPassword, CSSClass.authorizationInput], \'\', \'Пароль*\');\n      var signInButton = createTag(\'button\', CSSClass.authorizationButton, \'войти\');\n\n      signInButton.onclick = function () {\n        _this.deleteAllWarningMessage();\n\n        _this.controller.singInUser(inputEmail, inputPassword);\n      };\n\n      var registerButton = createTag(\'button\', CSSClass.authorizationButton, \'регистрация\');\n\n      registerButton.onclick = function () {\n        return _this.init(_this.registerView());\n      };\n\n      wrapper.append(title, inputEmail, inputPassword, signInButton, registerButton);\n      return wrapper;\n    }\n  }, {\n    key: "registerView",\n    value: function registerView() {\n      var _this2 = this;\n\n      var wrapper = createTag(\'div\', CSSClass.authorization);\n      var title = createTag(\'h2\', CSSClass.authorizationTitle, \'регистрация\');\n      var inputName = createInput(\'text\', CSSClass.authorizationInput, \'\', \'Ваше имя*\');\n      var inputEmail = createInput(\'email\', [CSSClass.authorizationInputEmail, CSSClass.authorizationInput], \'\', \'email*\');\n      var inputPassword = createInput(\'password\', [CSSClass.authorizationInputPassword, CSSClass.authorizationInput], \'\', \'password*\');\n      var registerButton = createTag(\'button\', CSSClass.authorizationButton, \'зарегистрироваться\');\n\n      registerButton.onclick = function () {\n        _this2.deleteAllWarningMessage();\n\n        _this2.controller.createNewUser(inputName, inputEmail, inputPassword);\n      };\n\n      var signInButton = createTag(\'button\', CSSClass.authorizationButton, \'у меня уже есть аккаунт\');\n\n      signInButton.onclick = function () {\n        return _this2.init(_this2.signInView());\n      };\n\n      wrapper.append(title, inputName, inputEmail, inputPassword, registerButton, signInButton);\n      return wrapper;\n    }\n  }, {\n    key: "deleteAllWarningMessage",\n    value: function deleteAllWarningMessage() {\n      var messages = document.querySelectorAll(".".concat(CSSClass.warningMessage));\n      messages.forEach(function (item) {\n        return item.remove();\n      });\n      var alertBorderClass = document.querySelectorAll(".".concat(CSSClass.warning));\n      alertBorderClass.forEach(function (item) {\n        return item.classList.remove(CSSClass.warning);\n      });\n    }\n  }]);\n\n  return AuthorizationView;\n}();\n// EXTERNAL MODULE: ../node_modules/react/index.js\nvar react = __webpack_require__(7378);\n// EXTERNAL MODULE: ../node_modules/react-dom/client.js\nvar client = __webpack_require__(7634);\n// EXTERNAL MODULE: ../node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js + 2 modules\nvar ThemeProvider = __webpack_require__(3028);\n// EXTERNAL MODULE: ../node_modules/@mui/material/Card/Card.js + 1 modules\nvar Card = __webpack_require__(4141);\n// EXTERNAL MODULE: ../node_modules/@mui/material/Box/Box.js + 1 modules\nvar Box = __webpack_require__(6881);\n// EXTERNAL MODULE: ../node_modules/@mui/material/CardContent/CardContent.js + 1 modules\nvar CardContent = __webpack_require__(2919);\n// EXTERNAL MODULE: ../node_modules/@mui/material/Typography/Typography.js + 1 modules\nvar Typography = __webpack_require__(1011);\n// EXTERNAL MODULE: ../node_modules/@mui/material/IconButton/IconButton.js + 1 modules\nvar IconButton = __webpack_require__(3760);\n// EXTERNAL MODULE: ../node_modules/@mui/icons-material/VolumeUp.js\nvar VolumeUp = __webpack_require__(4561);\n// EXTERNAL MODULE: ../node_modules/@mui/material/styles/createTheme.js + 14 modules\nvar createTheme = __webpack_require__(4366);\n;// CONCATENATED MODULE: ./script/view/pages/textbook/components/theme.tsx\n\nvar theme = (0,createTheme/* default */.Z)({\n  typography: {\n    fontSize: 22\n  }\n});\nvar colors = {\n  0: \'#29b6f6\',\n  1: \'#26a69a\',\n  2: \'#ffa726\',\n  3: \'#9ccc65\',\n  4: \'#5c6bc0\',\n  5: \'#ef5350\'\n};\nvar textbookCardStyle = {\n  minWidth: 275,\n  height: 200,\n  display: \'flex\'\n};\nvar textbookCardImageStyle = function textbookCardImageStyle(_ref) {\n  var word = _ref.word,\n      port = _ref.port;\n  return {\n    height: 1,\n    width: 300,\n    backgroundImage: "url(".concat(port, "/").concat(word.image, ")"),\n    backgroundSize: \'cover\',\n    backgroundPosition: \'center\',\n    backgroundRepeat: \'no-repeat\'\n  };\n};\nvar textbookCardContentStyle = {\n  width: 1\n};\nvar ImportContactsOutlinedIconStyle = function ImportContactsOutlinedIconStyle(num) {\n  return {\n    color: colors[num],\n    fontSize: \'2rem\',\n    marginRight: \'0.5rem\'\n  };\n};\nvar ArrowIosIconStyle = {\n  fontSize: \'small\'\n};\nvar InsertDriveFileOutlinedIconStyle = {\n  fontSize: \'1.8rem\',\n  marginLeft: \'-0.3rem\',\n  marginRight: \'0.5rem\'\n};\n// EXTERNAL MODULE: ../node_modules/@mui/icons-material/Done.js\nvar Done = __webpack_require__(1807);\n// EXTERNAL MODULE: ../node_modules/@mui/icons-material/Psychology.js\nvar Psychology = __webpack_require__(3082);\n// EXTERNAL MODULE: ../node_modules/@mui/icons-material/Delete.js\nvar Delete = __webpack_require__(6655);\n;// CONCATENATED MODULE: ./script/view/pages/textbook/components/buttons/CardButtonsGroup.tsx\nfunction CardButtonsGroup_typeof(obj) { "@babel/helpers - typeof"; return CardButtonsGroup_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, CardButtonsGroup_typeof(obj); }\n\nfunction CardButtonsGroup_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ CardButtonsGroup_regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == CardButtonsGroup_typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'throw\' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction CardButtonsGroup_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction CardButtonsGroup_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { CardButtonsGroup_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { CardButtonsGroup_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || CardButtonsGroup_unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction CardButtonsGroup_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return CardButtonsGroup_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return CardButtonsGroup_arrayLikeToArray(o, minLen); }\n\nfunction CardButtonsGroup_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\nfunction CardButtonsGroup(_ref) {\n  var word = _ref.word,\n      userWords = _ref.userWords,\n      hardBtnSet = _ref.hardBtnSet,\n      hardBtnRemove = _ref.hardBtnRemove;\n\n  var _useState = (0,react.useState)(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDoneActive = _useState2[0],\n      setDoneActive = _useState2[1];\n\n  var _useState3 = (0,react.useState)(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isHardActive = _useState4[0],\n      setHardActive = _useState4[1];\n\n  var toggleClass = function toggleClass(btnClass) {\n    switch (btnClass) {\n      case \'done\':\n        setDoneActive(!isDoneActive);\n        break;\n\n      case \'hard\':\n        setHardActive(true);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  (0,react.useEffect)(function () {\n    function getUserWords() {\n      return _getUserWords.apply(this, arguments);\n    }\n\n    function _getUserWords() {\n      _getUserWords = CardButtonsGroup_asyncToGenerator( /*#__PURE__*/CardButtonsGroup_regeneratorRuntime().mark(function _callee() {\n        return CardButtonsGroup_regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return userWords.then(function (arr) {\n                  if (arr.includes(word.id)) {\n                    toggleClass(\'hard\');\n                  }\n                });\n\n              case 2:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getUserWords.apply(this, arguments);\n    }\n\n    getUserWords();\n  }, [hardBtnSet]);\n  return /*#__PURE__*/react.createElement("div", {\n    className: CSSClass.cardIconButtonsWrapper\n  }, /*#__PURE__*/react.createElement(IconButton/* default */.Z, {\n    "aria-label": "done",\n    onClick: function onClick() {\n      return toggleClass(\'done\');\n    }\n  }, /*#__PURE__*/react.createElement(Done/* default */.Z, {\n    fontSize: "large",\n    className: "".concat(isDoneActive && CSSClass.cardDoneActive)\n  })), /*#__PURE__*/react.createElement(IconButton/* default */.Z, {\n    "aria-label": "hard",\n    onClick: hardBtnSet && function () {\n      toggleClass(\'hard\');\n      hardBtnSet(word);\n    } || hardBtnRemove && function () {\n      setHardActive(false);\n      hardBtnRemove(word);\n    },\n    disabled: isHardActive\n  }, hardBtnSet && /*#__PURE__*/react.createElement(Psychology/* default */.Z, {\n    fontSize: "large",\n    className: "".concat(isHardActive && CSSClass.cardHardActive)\n  }), !hardBtnSet && /*#__PURE__*/react.createElement(Delete/* default */.Z, {\n    fontSize: "large"\n  })));\n}\n;// CONCATENATED MODULE: ./script/view/pages/textbook/components/cards/Card.tsx\n\n\n\n\n\n\n\n\n\n\n\nfunction WordCard(_ref) {\n  var word = _ref.word,\n      port = _ref.port,\n      playSounds = _ref.playSounds,\n      hardBtnSet = _ref.hardBtnSet,\n      hardBtnRemove = _ref.hardBtnRemove,\n      userWords = _ref.userWords;\n  return /*#__PURE__*/react.createElement(Card/* default */.Z, {\n    className: CSSClass.textbookCard,\n    sx: textbookCardStyle\n  }, /*#__PURE__*/react.createElement(Box/* default */.Z, {\n    className: CSSClass.textbookCardImage,\n    sx: textbookCardImageStyle({\n      word: word,\n      port: port\n    })\n  }), /*#__PURE__*/react.createElement(CardContent/* default */.Z, {\n    className: CSSClass.textbookCardContent,\n    sx: textbookCardContentStyle\n  }, /*#__PURE__*/react.createElement(Typography/* default */.Z, {\n    gutterBottom: true,\n    variant: "h5",\n    component: "div"\n  }, "".concat(word.word, " - ").concat(word.transcription), /*#__PURE__*/react.createElement(IconButton/* default */.Z, {\n    className: "card--play-sound",\n    "aria-label": "play sound",\n    size: "small",\n    sx: {\n      marginBottom: \'0.4rem\',\n      marginLeft: \'0.5rem\'\n    },\n    onClick: function onClick() {\n      playSounds(word);\n    }\n  }, /*#__PURE__*/react.createElement(VolumeUp/* default */.Z, {\n    fontSize: "small"\n  }))), /*#__PURE__*/react.createElement(Typography/* default */.Z, {\n    sx: {\n      mb: 1.5\n    },\n    color: "text.secondary"\n  }, word.wordTranslate), /*#__PURE__*/react.createElement(Typography/* default */.Z, {\n    variant: "body2",\n    dangerouslySetInnerHTML: {\n      __html: word.textMeaning\n    }\n  }), /*#__PURE__*/react.createElement(Typography/* default */.Z, {\n    variant: "body2",\n    color: "text.secondary"\n  }, word.textMeaningTranslate), /*#__PURE__*/react.createElement(Box/* default */.Z, {\n    className: CSSClass.textbookCardDelimeter\n  }), /*#__PURE__*/react.createElement(Typography/* default */.Z, {\n    variant: "body2",\n    dangerouslySetInnerHTML: {\n      __html: word.textExample\n    }\n  }), /*#__PURE__*/react.createElement(Typography/* default */.Z, {\n    variant: "body2",\n    color: "text.secondary"\n  }, word.textExampleTranslate)), userInfo.login && /*#__PURE__*/react.createElement(CardButtonsGroup, {\n    word: word,\n    userWords: userWords,\n    hardBtnSet: hardBtnSet,\n    hardBtnRemove: hardBtnRemove\n  }));\n}\n// EXTERNAL MODULE: ../node_modules/@mui/material/Button/Button.js + 1 modules\nvar Button = __webpack_require__(2144);\n// EXTERNAL MODULE: ../node_modules/@mui/material/Menu/Menu.js + 24 modules\nvar Menu = __webpack_require__(3917);\n// EXTERNAL MODULE: ../node_modules/@mui/material/Fade/Fade.js\nvar Fade = __webpack_require__(9761);\n// EXTERNAL MODULE: ../node_modules/@mui/material/MenuItem/MenuItem.js + 4 modules\nvar MenuItem = __webpack_require__(4179);\n// EXTERNAL MODULE: ../node_modules/@mui/icons-material/ImportContactsOutlined.js\nvar ImportContactsOutlined = __webpack_require__(5747);\n;// CONCATENATED MODULE: ./script/view/pages/textbook/components/buttons/MenuButton.tsx\nfunction MenuButton_toConsumableArray(arr) { return MenuButton_arrayWithoutHoles(arr) || MenuButton_iterableToArray(arr) || MenuButton_unsupportedIterableToArray(arr) || MenuButton_nonIterableSpread(); }\n\nfunction MenuButton_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction MenuButton_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction MenuButton_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return MenuButton_arrayLikeToArray(arr); }\n\nfunction MenuButton_slicedToArray(arr, i) { return MenuButton_arrayWithHoles(arr) || MenuButton_iterableToArrayLimit(arr, i) || MenuButton_unsupportedIterableToArray(arr, i) || MenuButton_nonIterableRest(); }\n\nfunction MenuButton_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction MenuButton_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return MenuButton_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return MenuButton_arrayLikeToArray(o, minLen); }\n\nfunction MenuButton_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction MenuButton_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction MenuButton_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\nfunction MenuButton(_ref) {\n  var itemsLength = _ref.itemsLength,\n      updateWords = _ref.updateWords,\n      setPageButtonText = _ref.setPageButtonText;\n\n  var _React$useState = react.useState(null),\n      _React$useState2 = MenuButton_slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = react.useState(\'Раздел 1\'),\n      _React$useState4 = MenuButton_slicedToArray(_React$useState3, 2),\n      buttonText = _React$useState4[0],\n      setButtonText = _React$useState4[1];\n\n  var open = Boolean(anchorEl);\n  var colorNumber = Number(buttonText.match(/[1-6]/g)) - 1;\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose(event) {\n    if (event.currentTarget.className.includes(\'MuiMenuItem-root\')) {\n      var groupNum = Number(event.currentTarget.innerText.match(/[0-9]/g)) - 1;\n      updateWords(groupNum, 0);\n      setPageButtonText(\'Страница 1\');\n      setButtonText(event.currentTarget.innerText);\n    }\n\n    setAnchorEl(null);\n  };\n\n  return /*#__PURE__*/react.createElement("div", {\n    className: CSSClass.textbookMenuButtonWrapper\n  }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n    "aria-controls": "fade-menu",\n    "aria-haspopup": "true",\n    onClick: handleClick,\n    variant: "contained",\n    color: "inherit",\n    className: CSSClass.textbookMenuButton,\n    sx: {\n      backgroundColor: \'#c5e1a5\'\n    }\n  }, /*#__PURE__*/react.createElement(ImportContactsOutlined/* default */.Z, {\n    sx: ImportContactsOutlinedIconStyle(colorNumber)\n  }), buttonText), /*#__PURE__*/react.createElement(Menu/* default */.Z, {\n    id: "fade-menu",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: open,\n    onClose: handleClose,\n    TransitionComponent: Fade/* default */.Z\n  }, MenuButton_toConsumableArray(new Array(itemsLength)).map(function (v, i) {\n    return /*#__PURE__*/react.createElement(MenuItem/* default */.Z, {\n      key: "menu-".concat(i + 1),\n      onClick: handleClose\n    }, /*#__PURE__*/react.createElement(ImportContactsOutlined/* default */.Z, {\n      sx: ImportContactsOutlinedIconStyle(i)\n    }), "\\u0420\\u0430\\u0437\\u0434\\u0435\\u043B", \' \', i + 1);\n  })));\n}\n// EXTERNAL MODULE: ../node_modules/@mui/material/ButtonGroup/ButtonGroup.js + 1 modules\nvar ButtonGroup = __webpack_require__(3258);\n// EXTERNAL MODULE: ../node_modules/@mui/icons-material/ArrowBackIosNew.js\nvar ArrowBackIosNew = __webpack_require__(5286);\n// EXTERNAL MODULE: ../node_modules/@mui/icons-material/ArrowForwardIos.js\nvar ArrowForwardIos = __webpack_require__(1468);\n// EXTERNAL MODULE: ../node_modules/@mui/icons-material/InsertDriveFileOutlined.js\nvar InsertDriveFileOutlined = __webpack_require__(2771);\n;// CONCATENATED MODULE: ./script/view/pages/textbook/components/buttons/PageButtonsGroup.tsx\nfunction PageButtonsGroup_toConsumableArray(arr) { return PageButtonsGroup_arrayWithoutHoles(arr) || PageButtonsGroup_iterableToArray(arr) || PageButtonsGroup_unsupportedIterableToArray(arr) || PageButtonsGroup_nonIterableSpread(); }\n\nfunction PageButtonsGroup_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction PageButtonsGroup_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction PageButtonsGroup_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return PageButtonsGroup_arrayLikeToArray(arr); }\n\nfunction PageButtonsGroup_slicedToArray(arr, i) { return PageButtonsGroup_arrayWithHoles(arr) || PageButtonsGroup_iterableToArrayLimit(arr, i) || PageButtonsGroup_unsupportedIterableToArray(arr, i) || PageButtonsGroup_nonIterableRest(); }\n\nfunction PageButtonsGroup_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction PageButtonsGroup_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return PageButtonsGroup_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return PageButtonsGroup_arrayLikeToArray(o, minLen); }\n\nfunction PageButtonsGroup_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction PageButtonsGroup_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction PageButtonsGroup_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\n\n\n\n\nfunction PageButtonsGroup(_ref) {\n  var pagesLength = _ref.pagesLength,\n      updateWords = _ref.updateWords,\n      buttonText = _ref.buttonText,\n      setButtonText = _ref.setButtonText;\n\n  var _React$useState = react.useState(null),\n      _React$useState2 = PageButtonsGroup_slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var open = Boolean(anchorEl);\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose(event) {\n    if (event.currentTarget.className.includes(\'page-\')) {\n      var pageNum = Number(event.currentTarget.innerText.match(/\\d+/g)) - 1;\n      updateWords(textbookLocation.group, pageNum);\n      console.log(textbookLocation);\n      setButtonText(event.currentTarget.innerText);\n    }\n\n    setAnchorEl(null);\n  };\n\n  var changePage = function changePage(event) {\n    var pageNum = textbookLocation.page;\n\n    if (event.currentTarget.className.includes(\'textbook-prev-page\') && pageNum > 0) {\n      updateWords(textbookLocation.group, pageNum - 1);\n      setButtonText("\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 ".concat(pageNum));\n    }\n\n    if (event.currentTarget.className.includes(\'textbook-next-page\') && pageNum < pagesLength - 1) {\n      updateWords(textbookLocation.group, pageNum + 1);\n      setButtonText("\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 ".concat(pageNum + 2));\n    }\n  };\n\n  return /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n    variant: "contained",\n    fullWidth: false,\n    color: "inherit",\n    "aria-label": "outlined primary button group"\n  }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n    className: "textbook-prev-page",\n    onClick: changePage\n  }, /*#__PURE__*/react.createElement(ArrowBackIosNew/* default */.Z, {\n    sx: ArrowIosIconStyle\n  })), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n    "aria-controls": "fade-menu",\n    "aria-haspopup": "true",\n    onClick: handleClick,\n    variant: "contained",\n    color: "inherit",\n    className: CSSClass.textbookMenuButton\n  }, /*#__PURE__*/react.createElement(InsertDriveFileOutlined/* default */.Z, {\n    sx: InsertDriveFileOutlinedIconStyle\n  }), buttonText), /*#__PURE__*/react.createElement(Menu/* default */.Z, {\n    className: "textbook-pages-menu",\n    id: "fade-menu",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: open,\n    onClose: handleClose,\n    TransitionComponent: Fade/* default */.Z\n  }, PageButtonsGroup_toConsumableArray(new Array(pagesLength)).map(function (v, i) {\n    return /*#__PURE__*/react.createElement(MenuItem/* default */.Z, {\n      className: "page-".concat(i + 1),\n      key: "page-".concat(i + 1),\n      onClick: handleClose\n    }, /*#__PURE__*/react.createElement(InsertDriveFileOutlined/* default */.Z, {\n      sx: InsertDriveFileOutlinedIconStyle\n    }), "\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430", \' \', i + 1);\n  })), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n    className: "textbook-next-page",\n    onClick: changePage\n  }, /*#__PURE__*/react.createElement(ArrowForwardIos/* default */.Z, {\n    sx: ArrowIosIconStyle\n  })));\n}\n;// CONCATENATED MODULE: ./script/view/pages/textbook/components/buttons/TextbookButtonsGroup.tsx\nfunction TextbookButtonsGroup_slicedToArray(arr, i) { return TextbookButtonsGroup_arrayWithHoles(arr) || TextbookButtonsGroup_iterableToArrayLimit(arr, i) || TextbookButtonsGroup_unsupportedIterableToArray(arr, i) || TextbookButtonsGroup_nonIterableRest(); }\n\nfunction TextbookButtonsGroup_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction TextbookButtonsGroup_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return TextbookButtonsGroup_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return TextbookButtonsGroup_arrayLikeToArray(o, minLen); }\n\nfunction TextbookButtonsGroup_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction TextbookButtonsGroup_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction TextbookButtonsGroup_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\nfunction TextbookButtonsGroup(_ref) {\n  var itemsLength = _ref.itemsLength,\n      pagesLength = _ref.pagesLength,\n      updateWords = _ref.updateWords;\n\n  var _React$useState = react.useState(\'Страница 1\'),\n      _React$useState2 = TextbookButtonsGroup_slicedToArray(_React$useState, 2),\n      buttonText = _React$useState2[0],\n      setButtonText = _React$useState2[1];\n\n  return /*#__PURE__*/react.createElement("div", {\n    className: CSSClass.textbookButtonsGroup\n  }, /*#__PURE__*/react.createElement(MenuButton, {\n    itemsLength: itemsLength,\n    pagesLength: pagesLength,\n    updateWords: updateWords,\n    setPageButtonText: setButtonText\n  }), /*#__PURE__*/react.createElement(PageButtonsGroup, {\n    pagesLength: pagesLength,\n    updateWords: updateWords,\n    buttonText: buttonText,\n    setButtonText: setButtonText\n  }));\n}\n;// CONCATENATED MODULE: ./script/view/pages/textbook/controller/textbookController.ts\nfunction textbookController_typeof(obj) { "@babel/helpers - typeof"; return textbookController_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, textbookController_typeof(obj); }\n\nfunction textbookController_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ textbookController_regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == textbookController_typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'throw\' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction textbookController_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction textbookController_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { textbookController_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { textbookController_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction textbookController_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction textbookController_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction textbookController_createClass(Constructor, protoProps, staticProps) { if (protoProps) textbookController_defineProperties(Constructor.prototype, protoProps); if (staticProps) textbookController_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nvar TextbookController = /*#__PURE__*/function () {\n  function TextbookController() {\n    textbookController_classCallCheck(this, TextbookController);\n\n    _defineProperty(this, "groupsNum", 6);\n\n    _defineProperty(this, "pagesNum", 30);\n\n    this.server = new Server();\n    this.group = 0;\n    this.page = 0;\n    this.port = this.server.port;\n    this.userWords = this.server.getUserAllWords();\n  }\n\n  textbookController_createClass(TextbookController, [{\n    key: "playSounds",\n    value: function playSounds(word) {\n      var sounds = [new Audio("".concat(this.server.port, "/").concat(word.audio)), new Audio("".concat(this.server.port, "/").concat(word.audioMeaning)), new Audio("".concat(this.server.port, "/").concat(word.audioExample))];\n      var i = -1;\n\n      function playSnd() {\n        i += 1;\n        if (i === sounds.length) return;\n        sounds[i].addEventListener(\'ended\', playSnd);\n        sounds[i].play();\n      }\n\n      playSnd();\n    }\n  }, {\n    key: "refreshHardWords",\n    value: function refreshHardWords() {\n      this.userWords = this.server.getUserAllWords();\n    }\n  }, {\n    key: "setHardWord",\n    value: function () {\n      var _setHardWord = textbookController_asyncToGenerator( /*#__PURE__*/textbookController_regeneratorRuntime().mark(function _callee(word) {\n        var wordSet, response;\n        return textbookController_regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.server.getUserAggregatedWord(word.id, \'\');\n\n              case 3:\n                response = _context.sent;\n                wordSet = {\n                  difficulty: \'hard\',\n                  optional: response.optional\n                };\n                _context.next = 7;\n                return this.server.updateUserWord(word.id, wordSet);\n\n              case 7:\n                _context.next = 14;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context["catch"](0);\n                wordSet = {\n                  difficulty: \'hard\',\n                  optional: {\n                    isWas: false,\n                    isDelete: false,\n                    isLearned: false,\n                    correctAnswerRow: 0\n                  }\n                };\n                _context.next = 14;\n                return this.server.createUserWord(word.id, wordSet);\n\n              case 14:\n                this.refreshHardWords();\n\n              case 15:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9]]);\n      }));\n\n      function setHardWord(_x) {\n        return _setHardWord.apply(this, arguments);\n      }\n\n      return setHardWord;\n    }()\n  }, {\n    key: "removeHardWord",\n    value: function removeHardWord(word) {\n      this.server.deleteUserWord(word.id);\n      this.refreshHardWords();\n    }\n  }]);\n\n  return TextbookController;\n}();\n;// CONCATENATED MODULE: ./script/view/pages/textbook/Textbook.tsx\nfunction Textbook_slicedToArray(arr, i) { return Textbook_arrayWithHoles(arr) || Textbook_iterableToArrayLimit(arr, i) || Textbook_unsupportedIterableToArray(arr, i) || Textbook_nonIterableRest(); }\n\nfunction Textbook_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction Textbook_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return Textbook_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Textbook_arrayLikeToArray(o, minLen); }\n\nfunction Textbook_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction Textbook_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction Textbook_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\n\n\n\n\nvar rootTextbook = createTag(\'div\', CSSClass.textbook, \'\');\nvar rootContainer = (0,client/* createRoot */.s)(rootTextbook);\nvar server = new Server();\nvar controller = new TextbookController();\nvar textbookLocation = {\n  page: controller.page,\n  group: controller.group\n}; // const userWordIds = controller.userWords.then((json) => json.map((el) => el.wordId));\n\nfunction Textbook() {\n  var _useState = (0,react.useState)([]),\n      _useState2 = Textbook_slicedToArray(_useState, 2),\n      words = _useState2[0],\n      setWords = _useState2[1];\n\n  var _useState3 = (0,react.useState)(),\n      _useState4 = Textbook_slicedToArray(_useState3, 2),\n      userWords = _useState4[0],\n      setUserWords = _useState4[1];\n\n  var updateWords = function updateWords(group, page) {\n    server.getAllWords(group, page).then(function (json) {\n      return setWords(json);\n    });\n    textbookLocation.page = page;\n    textbookLocation.group = group;\n  };\n\n  if (words.length === 0) {\n    server.getAllWords().then(function (json) {\n      return setWords(json);\n    });\n  }\n\n  (0,react.useEffect)(function () {\n    return setUserWords(controller.userWords.then(function (json) {\n      return json.map(function (el) {\n        return el.wordId;\n      });\n    }));\n  }, [controller.userWords]);\n  return /*#__PURE__*/react.createElement(ThemeProvider/* default */.Z, {\n    theme: theme\n  }, /*#__PURE__*/react.createElement("div", {\n    className: CSSClass.textbookWrapper\n  }, /*#__PURE__*/react.createElement("h2", {\n    className: CSSClass.textbookHeader\n  }, "\\u0423\\u0447\\u0435\\u0431\\u043D\\u0438\\u043A"), /*#__PURE__*/react.createElement(TextbookButtonsGroup, {\n    itemsLength: controller.groupsNum,\n    pagesLength: controller.pagesNum,\n    updateWords: updateWords\n  }), words.map(function (w) {\n    return /*#__PURE__*/react.createElement(WordCard, {\n      word: w,\n      port: server.port,\n      playSounds: function playSounds() {\n        controller.playSounds(w);\n      },\n      hardBtnSet: function hardBtnSet() {\n        controller.setHardWord(w);\n      },\n      userWords: userWords,\n      key: w.id\n    });\n  })));\n}\n\nfunction textbookRender() {\n  rootContainer.render( /*#__PURE__*/react.createElement(Textbook, null));\n}\n\n/* harmony default export */ var textbook_Textbook = (textbookRender);\n;// CONCATENATED MODULE: ./script/view/pages/textbook/Dictionary.tsx\nfunction Dictionary_typeof(obj) { "@babel/helpers - typeof"; return Dictionary_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Dictionary_typeof(obj); }\n\nfunction Dictionary_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ Dictionary_regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == Dictionary_typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'throw\' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction Dictionary_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction Dictionary_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { Dictionary_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { Dictionary_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction Dictionary_slicedToArray(arr, i) { return Dictionary_arrayWithHoles(arr) || Dictionary_iterableToArrayLimit(arr, i) || Dictionary_unsupportedIterableToArray(arr, i) || Dictionary_nonIterableRest(); }\n\nfunction Dictionary_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction Dictionary_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return Dictionary_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Dictionary_arrayLikeToArray(o, minLen); }\n\nfunction Dictionary_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction Dictionary_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction Dictionary_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\n\n\n\nvar rootDictionary = createTag(\'div\', CSSClass.dictionary, \'\');\nvar Dictionary_rootContainer = (0,client/* createRoot */.s)(rootDictionary);\nvar Dictionary_server = new Server();\nvar Dictionary_controller = new TextbookController();\nvar Dictionary_textbookLocation = {\n  page: Dictionary_controller.page,\n  group: Dictionary_controller.group\n};\n\nfunction Dictionary() {\n  var _useState = (0,react.useState)([]),\n      _useState2 = Dictionary_slicedToArray(_useState, 2),\n      words = _useState2[0],\n      setWords = _useState2[1];\n\n  var _useState3 = (0,react.useState)(0),\n      _useState4 = Dictionary_slicedToArray(_useState3, 2),\n      dictCount = _useState4[0],\n      setCount = _useState4[1];\n\n  (0,react.useEffect)(function () {\n    function getUserWordsIds() {\n      return _getUserWordsIds.apply(this, arguments);\n    }\n\n    function _getUserWordsIds() {\n      _getUserWordsIds = Dictionary_asyncToGenerator( /*#__PURE__*/Dictionary_regeneratorRuntime().mark(function _callee() {\n        var userWordIds, addArr;\n        return Dictionary_regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userWordIds = Dictionary_controller.userWords.then(function (json) {\n                  return json.map(function (el) {\n                    return el.wordId;\n                  });\n                });\n                addArr = [];\n                userWordIds.then(function (uWordIds) {\n                  uWordIds.forEach(function (id) {\n                    return Dictionary_server.getWord(id).then(function (el) {\n                      addArr = addArr.concat(el);\n                      setWords(addArr);\n                    });\n                  });\n                });\n\n              case 3:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getUserWordsIds.apply(this, arguments);\n    }\n\n    getUserWordsIds();\n  }, [setWords, setCount]);\n  return /*#__PURE__*/react.createElement(ThemeProvider/* default */.Z, {\n    theme: theme\n  }, /*#__PURE__*/react.createElement("div", {\n    className: CSSClass.textbookWrapper\n  }, /*#__PURE__*/react.createElement("h2", {\n    className: CSSClass.textbookHeader\n  }, "\\u0421\\u043B\\u043E\\u0432\\u0430\\u0440\\u044C"), words.map(function (w) {\n    return /*#__PURE__*/react.createElement(WordCard, {\n      word: w,\n      port: Dictionary_server.port,\n      playSounds: function playSounds() {\n        Dictionary_controller.playSounds(w);\n      },\n      key: w.id,\n      hardBtnRemove: function hardBtnRemove() {\n        Dictionary_controller.removeHardWord(w);\n        setWords(words.filter(function (word) {\n          return word !== w;\n        }));\n        setCount(dictCount - 1);\n      }\n    });\n  })));\n}\n\nfunction dictionaryRender() {\n  Dictionary_rootContainer.render( /*#__PURE__*/react.createElement(Dictionary, null));\n}\n\n/* harmony default export */ var textbook_Dictionary = (dictionaryRender);\n;// CONCATENATED MODULE: ./script/view/components/audioGame/modelAudioGame.ts\nvar modelAudioGame = {\n  // @ts-ignore\n  rightAnswerOnPage: \'\',\n  wrongAnswerOnPage: [],\n  listAnswerOnPage: [],\n  listWords: [],\n  currentNumWord: 0,\n  lastNumWord: 0,\n  difficulty: 2,\n  isShowAnswer: false,\n  rightAnswers: [],\n  wrongAnswers: [],\n  serialCorrectAnswer: 0,\n  maxSerialCorrectAnswer: 0,\n  resetAll: function resetAll() {\n    // @ts-ignore\n    this.rightAnswerOnPage = \'\';\n    this.wrongAnswerOnPage = [];\n    this.listAnswerOnPage = [];\n    this.listWords = [];\n    this.currentNumWord = 0;\n    this.lastNumWord = 0;\n    this.difficulty = 2;\n    this.isShowAnswer = false;\n    this.rightAnswers = [];\n    this.wrongAnswers = [];\n    this.serialCorrectAnswer = 0;\n    this.maxSerialCorrectAnswer = 0;\n  },\n  applySettingsNextPage: function applySettingsNextPage() {\n    this.currentNumWord += 1;\n    this.wrongAnswerOnPage.length = 0;\n    this.listAnswerOnPage.length = 0;\n    this.isShowAnswer = false;\n  }\n};\n;// CONCATENATED MODULE: ./assets/sounds/correct.mp3\nvar correct_namespaceObject = __webpack_require__.p + "a7b1cde9b1708553ffbb.mp3";\n;// CONCATENATED MODULE: ./assets/sounds/wrong.mp3\nvar wrong_namespaceObject = __webpack_require__.p + "8e2ad3b17e55581cc52f.mp3";\n;// CONCATENATED MODULE: ./script/view/components/SendStatistics.ts\nfunction SendStatistics_typeof(obj) { "@babel/helpers - typeof"; return SendStatistics_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, SendStatistics_typeof(obj); }\n\nfunction SendStatistics_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ SendStatistics_regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == SendStatistics_typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'throw\' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction SendStatistics_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction SendStatistics_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { SendStatistics_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { SendStatistics_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction SendStatistics_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction SendStatistics_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction SendStatistics_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction SendStatistics_createClass(Constructor, protoProps, staticProps) { if (protoProps) SendStatistics_defineProperties(Constructor.prototype, protoProps); if (staticProps) SendStatistics_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\nvar SendStatistics = /*#__PURE__*/function () {\n  function SendStatistics(gameName, model) {\n    SendStatistics_classCallCheck(this, SendStatistics);\n\n    this.server = new Server();\n    this.gameName = gameName;\n    this.date = "".concat(new Date().getDate(), ".").concat(new Date().getMonth());\n    this.model = model;\n  }\n\n  SendStatistics_createClass(SendStatistics, [{\n    key: "resetStatisticDay",\n    value: function resetStatisticDay() {\n      this.newWord = 0;\n      this.statisticsDay = {\n        learnedWords: 0,\n        optional: SendStatistics_defineProperty({}, this.date, SendStatistics_defineProperty({\n          countNewWords: 0,\n          rightAnswers: 0,\n          wrongAnswers: 0,\n          serialRightAnswers: 0\n        }, this.gameName, {\n          countNewWords: 0,\n          rightAnswers: 0,\n          wrongAnswers: 0,\n          serialRightAnswers: 0\n        }))\n      };\n    }\n  }, {\n    key: "resetStatisticWord",\n    value: function resetStatisticWord() {\n      this.statisticsWord = {\n        difficulty: \'easy\',\n        optional: SendStatistics_defineProperty({\n          isWas: false,\n          isLearned: false,\n          correctAnswerRow: 0,\n          isDelete: false\n        }, this.gameName, {\n          rightCountAnswers: 0,\n          wrongCountAnswers: 0\n        })\n      };\n    }\n  }, {\n    key: "createStatistic",\n    value: function () {\n      var _createStatistic = SendStatistics_asyncToGenerator( /*#__PURE__*/SendStatistics_regeneratorRuntime().mark(function _callee() {\n        return SendStatistics_regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.resetStatisticDay();\n                this.resetStatisticWord();\n                _context.next = 4;\n                return this.createStatisticWords();\n\n              case 4:\n                _context.next = 6;\n                return this.createStatisticDay();\n\n              case 6:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function createStatistic() {\n        return _createStatistic.apply(this, arguments);\n      }\n\n      return createStatistic;\n    }()\n  }, {\n    key: "createStatisticWords",\n    value: function () {\n      var _createStatisticWords = SendStatistics_asyncToGenerator( /*#__PURE__*/SendStatistics_regeneratorRuntime().mark(function _callee2() {\n        var _this = this;\n\n        var listRightWordsPromise, listWrongWordsPromise;\n        return SendStatistics_regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (userInfo.login) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt("return");\n\n              case 2:\n                listRightWordsPromise = this.model.rightAnswers.map(function (word) {\n                  return _this.server.getUserWord(word.id).then(function (response) {\n                    if (response.status === 404) {\n                      _this.changeStatisticWordForRightAnswer(word.id);\n\n                      return;\n                    }\n\n                    if (response.ok) {\n                      _this.changeStatisticWordForRightAnswer(word.id, response);\n                    }\n                  });\n                });\n                listWrongWordsPromise = this.model.wrongAnswers.map(function (word) {\n                  return _this.server.getUserWord(word.id).then(function (response) {\n                    if (response.status === 404) {\n                      _this.changeStatisticWordForWrongAnswer(word.id);\n\n                      return;\n                    }\n\n                    if (response.ok) {\n                      _this.changeStatisticWordForWrongAnswer(word.id, response);\n                    }\n                  });\n                });\n                _context2.next = 6;\n                return Promise.all(listRightWordsPromise);\n\n              case 6:\n                _context2.next = 8;\n                return Promise.all(listWrongWordsPromise);\n\n              case 8:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function createStatisticWords() {\n        return _createStatisticWords.apply(this, arguments);\n      }\n\n      return createStatisticWords;\n    }()\n  }, {\n    key: "changeStatisticWordForRightAnswer",\n    value: function () {\n      var _changeStatisticWordForRightAnswer = SendStatistics_asyncToGenerator( /*#__PURE__*/SendStatistics_regeneratorRuntime().mark(function _callee3(wordId, wordResponse) {\n        var word, wordResp;\n        return SendStatistics_regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                word = JSON.parse(JSON.stringify(this.statisticsWord));\n\n                if (!wordResponse) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                _context3.next = 4;\n                return wordResponse.json();\n\n              case 4:\n                wordResp = _context3.sent;\n                word.difficulty = wordResp === null || wordResp === void 0 ? void 0 : wordResp.difficulty;\n                Object.assign(word.optional, wordResp === null || wordResp === void 0 ? void 0 : wordResp.optional);\n\n              case 7:\n                if (!word.optional.isWas) {\n                  word.optional.isWas = true;\n                  this.newWord += 1;\n                }\n\n                word.optional.correctAnswerRow += 1;\n\n                if (word.optional.correctAnswerRow >= 3 && word.difficulty !== \'hard\') {\n                  word.optional.isLearned = true;\n                } else if (word.optional.correctAnswerRow >= 5) {\n                  word.optional.isLearned = true;\n                } // @ts-ignore\n\n\n                word.optional[this.gameName].rightCountAnswers += 1;\n\n                if (!wordResponse) {\n                  _context3.next = 16;\n                  break;\n                }\n\n                _context3.next = 14;\n                return this.server.updateUserWord(wordId, word);\n\n              case 14:\n                _context3.next = 18;\n                break;\n\n              case 16:\n                _context3.next = 18;\n                return this.server.createUserWord(wordId, word);\n\n              case 18:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function changeStatisticWordForRightAnswer(_x, _x2) {\n        return _changeStatisticWordForRightAnswer.apply(this, arguments);\n      }\n\n      return changeStatisticWordForRightAnswer;\n    }()\n  }, {\n    key: "changeStatisticWordForWrongAnswer",\n    value: function () {\n      var _changeStatisticWordForWrongAnswer = SendStatistics_asyncToGenerator( /*#__PURE__*/SendStatistics_regeneratorRuntime().mark(function _callee4(wordId, wordResponse) {\n        var word, wordResp;\n        return SendStatistics_regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                word = JSON.parse(JSON.stringify(this.statisticsWord));\n\n                if (!wordResponse) {\n                  _context4.next = 7;\n                  break;\n                }\n\n                _context4.next = 4;\n                return wordResponse.json();\n\n              case 4:\n                wordResp = _context4.sent;\n                word.difficulty = wordResp === null || wordResp === void 0 ? void 0 : wordResp.difficulty;\n                Object.assign(word.optional, wordResp === null || wordResp === void 0 ? void 0 : wordResp.optional);\n\n              case 7:\n                if (!word.optional.isWas) {\n                  word.optional.isWas = true;\n                  this.newWord += 1;\n                }\n\n                word.optional.correctAnswerRow = 0; // @ts-ignore\n\n                word.optional[this.gameName].wrongCountAnswers += 1;\n\n                if (!wordResponse) {\n                  _context4.next = 15;\n                  break;\n                }\n\n                _context4.next = 13;\n                return this.server.updateUserWord(wordId, word);\n\n              case 13:\n                _context4.next = 17;\n                break;\n\n              case 15:\n                _context4.next = 17;\n                return this.server.createUserWord(wordId, word);\n\n              case 17:\n              case "end":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function changeStatisticWordForWrongAnswer(_x3, _x4) {\n        return _changeStatisticWordForWrongAnswer.apply(this, arguments);\n      }\n\n      return changeStatisticWordForWrongAnswer;\n    }()\n  }, {\n    key: "createStatisticDay",\n    value: function () {\n      var _createStatisticDay = SendStatistics_asyncToGenerator( /*#__PURE__*/SendStatistics_regeneratorRuntime().mark(function _callee5() {\n        var _this2 = this;\n\n        return SendStatistics_regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (userInfo.login) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                return _context5.abrupt("return");\n\n              case 2:\n                _context5.next = 4;\n                return this.server.getStatistics().then(function (response) {\n                  if (response.ok) {\n                    _this2.changeStatisticDay(response);\n                  }\n\n                  if (response.status === 404) {\n                    _this2.changeStatisticDay();\n                  }\n                });\n\n              case 4:\n              case "end":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function createStatisticDay() {\n        return _createStatisticDay.apply(this, arguments);\n      }\n\n      return createStatisticDay;\n    }()\n  }, {\n    key: "changeStatisticDay",\n    value: function () {\n      var _changeStatisticDay = SendStatistics_asyncToGenerator( /*#__PURE__*/SendStatistics_regeneratorRuntime().mark(function _callee6(statisticsResponse) {\n        var stat;\n        return SendStatistics_regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!statisticsResponse) {\n                  _context6.next = 6;\n                  break;\n                }\n\n                _context6.next = 3;\n                return statisticsResponse.json();\n\n              case 3:\n                stat = _context6.sent;\n                this.statisticsDay.learnedWords = stat.learnedWords;\n                Object.assign(this.statisticsDay.optional[this.date], stat.optional[this.date]);\n\n              case 6:\n                this.statisticsDay.optional[this.date].countNewWords += this.newWord;\n                this.statisticsDay.optional[this.date].wrongAnswers += this.model.wrongAnswers.length;\n                this.statisticsDay.optional[this.date].rightAnswers += this.model.rightAnswers.length;\n\n                if (this.statisticsDay.optional[this.date].serialRightAnswers < this.model.maxSerialCorrectAnswer) {\n                  this.statisticsDay.optional[this.date].serialRightAnswers = this.model.maxSerialCorrectAnswer;\n                } // @ts-ignore\n\n\n                this.statisticsDay.optional[this.date][this.gameName].countNewWords += this.newWord; // @ts-ignore\n\n                this.statisticsDay.optional[this.date][this.gameName].wrongAnswers += this.model.wrongAnswers.length; // @ts-ignore\n\n                this.statisticsDay.optional[this.date][this.gameName].rightAnswers += this.model.rightAnswers.length; // @ts-ignore\n\n                if (this.statisticsDay.optional[this.date][this.gameName].serialRightAnswers < this.model.maxSerialCorrectAnswer) {\n                  // @ts-ignore\n                  this.statisticsDay.optional[this.date][this.gameName].serialRightAnswers = this.model.maxSerialCorrectAnswer;\n                }\n\n                _context6.next = 16;\n                return this.server.updateStatistics(this.statisticsDay);\n\n              case 16:\n              case "end":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function changeStatisticDay(_x5) {\n        return _changeStatisticDay.apply(this, arguments);\n      }\n\n      return changeStatisticDay;\n    }()\n  }]);\n\n  return SendStatistics;\n}();\n;// CONCATENATED MODULE: ./script/view/components/audioGame/controllerAudioGame.ts\nfunction controllerAudioGame_typeof(obj) { "@babel/helpers - typeof"; return controllerAudioGame_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, controllerAudioGame_typeof(obj); }\n\nfunction controllerAudioGame_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ controllerAudioGame_regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == controllerAudioGame_typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'throw\' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction controllerAudioGame_toConsumableArray(arr) { return controllerAudioGame_arrayWithoutHoles(arr) || controllerAudioGame_iterableToArray(arr) || controllerAudioGame_unsupportedIterableToArray(arr) || controllerAudioGame_nonIterableSpread(); }\n\nfunction controllerAudioGame_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction controllerAudioGame_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return controllerAudioGame_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return controllerAudioGame_arrayLikeToArray(o, minLen); }\n\nfunction controllerAudioGame_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction controllerAudioGame_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return controllerAudioGame_arrayLikeToArray(arr); }\n\nfunction controllerAudioGame_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction controllerAudioGame_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction controllerAudioGame_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { controllerAudioGame_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { controllerAudioGame_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction controllerAudioGame_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction controllerAudioGame_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction controllerAudioGame_createClass(Constructor, protoProps, staticProps) { if (protoProps) controllerAudioGame_defineProperties(Constructor.prototype, protoProps); if (staticProps) controllerAudioGame_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\n\n\nvar ControllerAudioGame = /*#__PURE__*/function () {\n  function ControllerAudioGame(view) {\n    controllerAudioGame_classCallCheck(this, ControllerAudioGame);\n\n    this.controllerApp = new ControllerApp();\n    this.server = new Server();\n    this.view = view;\n    this.model = modelAudioGame;\n    this.sendStatistics = new SendStatistics(\'gameAudioCall\', this.model);\n  }\n\n  controllerAudioGame_createClass(ControllerAudioGame, [{\n    key: "loadWordsAndStartGame",\n    value: function () {\n      var _loadWordsAndStartGame = controllerAudioGame_asyncToGenerator( /*#__PURE__*/controllerAudioGame_regeneratorRuntime().mark(function _callee(list) {\n        var _this$model$listWords;\n\n        var listWords, randomPage;\n        return controllerAudioGame_regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.model.resetAll();\n                listWords = [];\n\n                if (!list) {\n                  _context.next = 6;\n                  break;\n                }\n\n                listWords = controllerAudioGame_toConsumableArray(list);\n                _context.next = 10;\n                break;\n\n              case 6:\n                randomPage = Math.floor(Math.random() * 30);\n                _context.next = 9;\n                return this.server.getAllWords(this.model.difficulty - 1, randomPage);\n\n              case 9:\n                listWords = _context.sent;\n\n              case 10:\n                shuffleWordList(listWords);\n                this.model.lastNumWord = listWords.length - 1;\n                this.model.listWords.length = 0;\n\n                (_this$model$listWords = this.model.listWords).push.apply(_this$model$listWords, controllerAudioGame_toConsumableArray(listWords));\n\n                this.controllerApp.openPage(this.view.createPageWithWord());\n\n              case 15:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadWordsAndStartGame(_x) {\n        return _loadWordsAndStartGame.apply(this, arguments);\n      }\n\n      return loadWordsAndStartGame;\n    }()\n  }, {\n    key: "nextWord",\n    value: function nextWord() {\n      if (this.model.currentNumWord === this.model.lastNumWord) {\n        resetKeyDownListener();\n        this.view.showResults();\n        this.sendStatistics.createStatistic();\n        return;\n      }\n\n      this.model.applySettingsNextPage();\n      this.controllerApp.openPage(this.view.createPageWithWord());\n    }\n  }, {\n    key: "changeDifficulty",\n    value: function changeDifficulty(difficulty) {\n      this.model.difficulty = difficulty;\n    }\n  }, {\n    key: "getVoice",\n    value: function getVoice() {\n      return new Audio("".concat(this.server.port, "/").concat(this.model.listWords[this.model.currentNumWord].audio));\n    }\n  }, {\n    key: "loadImage",\n    value: function loadImage() {\n      var img = createTag(\'div\', CSSClass.gameAudioHeaderImg);\n      img.style.backgroundImage = "url(".concat(this.server.port, "/").concat(this.model.listWords[this.model.currentNumWord].image, ")");\n      this.img = img;\n    }\n  }, {\n    key: "wrongAnswer",\n    value: function wrongAnswer(block) {\n      this.model.wrongAnswers.push(this.model.listWords[this.model.currentNumWord]);\n      this.model.isShowAnswer = true;\n      this.model.serialCorrectAnswer = 0;\n      var audio = new Audio(wrong_namespaceObject);\n      audio.play();\n      this.view.addLineThroughWrongAnswer(block);\n      this.view.dimLightAnswers(this.model.wrongAnswerOnPage);\n      this.view.createHeaderRightAnswer();\n      this.disabledListener();\n      this.view.createButtonNextWord();\n    }\n  }, {\n    key: "rightAnswer",\n    value: function rightAnswer(block) {\n      this.model.rightAnswers.push(this.model.listWords[this.model.currentNumWord]);\n      this.model.isShowAnswer = true;\n      this.model.serialCorrectAnswer += 1;\n\n      if (this.model.maxSerialCorrectAnswer < this.model.serialCorrectAnswer) {\n        this.model.maxSerialCorrectAnswer = this.model.serialCorrectAnswer;\n      }\n\n      var audio = new Audio(correct_namespaceObject);\n      audio.play();\n      var numBlock = block.querySelector(".".concat(CSSClass.gameAudioAnswerNum));\n\n      if (numBlock) {\n        numBlock.innerHTML = \'<img src = "./assets/svg/success.svg" alt = "succeed">\';\n      }\n\n      this.view.dimLightAnswers(this.model.wrongAnswerOnPage);\n      this.view.createHeaderRightAnswer();\n      this.disabledListener();\n      this.view.createButtonNextWord();\n    }\n  }, {\n    key: "disabledListener",\n    value: function disabledListener() {\n      [this.model.rightAnswerOnPage].concat(controllerAudioGame_toConsumableArray(this.model.wrongAnswerOnPage)).forEach(function (item) {\n        // eslint-disable-next-line no-param-reassign\n        item.style.pointerEvents = \'none\';\n      });\n    }\n  }, {\n    key: "addListener",\n    value: function addListener() {\n      var _this = this;\n\n      document.body.onkeydown = function (e) {\n        switch (e.key) {\n          case \' \':\n            _this.view.voiceImg.click();\n\n            break;\n\n          case \'Enter\':\n            _this.view.buttonUnknown.click();\n\n            break;\n\n          default:\n        }\n\n        if (!_this.model.isShowAnswer) {\n          switch (e.key) {\n            case \'1\':\n              _this.model.listAnswerOnPage[0].click();\n\n              break;\n\n            case \'2\':\n              _this.model.listAnswerOnPage[1].click();\n\n              break;\n\n            case \'3\':\n              _this.model.listAnswerOnPage[2].click();\n\n              break;\n\n            case \'4\':\n              _this.model.listAnswerOnPage[3].click();\n\n              break;\n\n            case \'5\':\n              _this.model.listAnswerOnPage[4].click();\n\n              break;\n\n            default:\n          }\n        }\n      };\n    }\n  }]);\n\n  return ControllerAudioGame;\n}();\n;// CONCATENATED MODULE: ./script/view/components/audioGame/viewAudioGame.ts\nfunction viewAudioGame_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction viewAudioGame_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction viewAudioGame_createClass(Constructor, protoProps, staticProps) { if (protoProps) viewAudioGame_defineProperties(Constructor.prototype, protoProps); if (staticProps) viewAudioGame_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\n\nvar ViewAudioGame = /*#__PURE__*/function () {\n  function ViewAudioGame() {\n    viewAudioGame_classCallCheck(this, ViewAudioGame);\n\n    this.model = modelAudioGame;\n    this.model.resetAll();\n    this.server = new Server();\n    this.controller = new ControllerAudioGame(this);\n    this.controllerApp = new ControllerApp();\n  }\n\n  viewAudioGame_createClass(ViewAudioGame, [{\n    key: "init",\n    value: function init() {\n      var wrapper = createTag(\'div\', CSSClass.gameAudio);\n      var preview = createTag(\'div\', CSSClass.gameAudioPreview);\n      wrapper.style.backgroundImage = \'url(./assets/img/games/audioGame_background.svg)\';\n      var title = createTag(\'h3\', CSSClass.gameAudioTitle, AudioGameText.name);\n      preview.append(title, this.createDescriptionGame());\n      wrapper.append(preview);\n      this.gameAudioContainer = wrapper;\n      return wrapper;\n    }\n  }, {\n    key: "createDescriptionGame",\n    value: function createDescriptionGame() {\n      var wrapper = createTag(\'div\', CSSClass.gameAudioDescriptionBlock);\n      var description = createTag(\'h4\', CSSClass.gameAudioDescription, AudioGameText.description);\n      var listControlDescription = createTag(\'ul\', CSSClass.gameAudioDescriptionControl);\n      var contrMouseDescription = createTag(\'li\', \'\', AudioGameText.descriptionControlMouse);\n      var contrKeyDescription = createTag(\'li\', \'\', AudioGameText.descriptionControlKey);\n      var contrReplayDescription = createTag(\'li\', \'\', AudioGameText.descriptionControlReplayingVoice);\n      var contrHintDescription = createTag(\'li\', \'\', AudioGameText.descriptionControlHint);\n      listControlDescription.append(contrMouseDescription, contrKeyDescription, contrReplayDescription, contrHintDescription);\n      wrapper.append(description, listControlDescription, this.createBlockWithStartButtons());\n      return wrapper;\n    }\n  }, {\n    key: "createBlockWithStartButtons",\n    value: function createBlockWithStartButtons() {\n      var _this = this;\n\n      var wrapper = createTag(\'div\', CSSClass.gameAudioBlockButtons);\n      var startGameButton = createTag(\'button\', CSSClass.gameAudioBlockButtonsStart, AudioGameText.startButton);\n\n      startGameButton.onclick = function () {\n        return _this.controller.loadWordsAndStartGame();\n      };\n\n      var selectedDifficultyButton = createSelect(\'difficulty\', \'selectDifficult\', CSSClass.gameAudioBlockButtonsSelect, createOptionListDifficulty(6, this.model.difficulty));\n      selectedDifficultyButton.addEventListener(\'change\', function () {\n        return _this.controller.changeDifficulty(+selectedDifficultyButton.value);\n      });\n      var fieldset = createTag(\'fieldset\', CSSClass.gameAudioBlockButtonsFieldset);\n      var legendFieldset = createTag(\'legend\', \'\', \'Сложность\');\n      fieldset.append(legendFieldset);\n      var fieldsetBlock = createTag(\'div\', CSSClass.gameAudioBlockButtonsFieldsetBlock);\n      fieldsetBlock.append(fieldset, selectedDifficultyButton);\n      wrapper.append(fieldsetBlock, startGameButton);\n      return wrapper;\n    }\n  }, {\n    key: "createPageWithWord",\n    value: function createPageWithWord() {\n      var _this2 = this;\n\n      var wrapper = createTag(\'div\', CSSClass.gameAudio);\n      var gamePage = createTag(\'div\', CSSClass.gameAudioGame);\n      wrapper.style.backgroundImage = \'url(./assets/img/games/audioGame_background.svg)\';\n      var blockHeader = createTag(\'div\', CSSClass.gameAudioHeader);\n      this.blockHeader = blockHeader;\n      blockHeader.append(this.createVoiceButtonAndPlayVoice());\n      var wrapperButton = createTag(\'div\', CSSClass.gameAudioWrapperButton);\n      var button = createTag(\'button\', CSSClass.gameAudioButton, \'не знаю\');\n      this.buttonUnknown = button;\n\n      button.onclick = function () {\n        return _this2.controller.wrongAnswer();\n      };\n\n      wrapperButton.append(button);\n      gamePage.append(blockHeader, this.createBlockWithAnswer(), wrapperButton);\n      wrapper.append(gamePage);\n      this.controller.loadImage();\n      this.gameAudioContainer = wrapper;\n      return wrapper;\n    }\n  }, {\n    key: "createVoiceButtonAndPlayVoice",\n    value: function createVoiceButtonAndPlayVoice() {\n      var wrapper = createTag(\'div\', CSSClass.gameAudioHeaderBottom);\n      var blockVoice = createTag(\'div\', CSSClass.gameAudioButtonVoice);\n      this.blockVoice = blockVoice;\n      var voiceImg = createTag(\'img\', CSSClass.gameAudioButtonVoiceImg);\n      voiceImg.src = \'./assets/svg/voice.svg\';\n      voiceImg.alt = \'voice\';\n      this.voiceImg = voiceImg;\n      var voice = this.controller.getVoice();\n      voice.play();\n\n      voiceImg.onclick = function () {\n        return voice.play();\n      };\n\n      blockVoice.append(voiceImg);\n      wrapper.append(blockVoice);\n      return wrapper;\n    }\n  }, {\n    key: "createBlockWithAnswer",\n    value: function createBlockWithAnswer() {\n      var _this3 = this;\n\n      var wrapper = createTag(\'div\', CSSClass.gameAudioAnswers);\n      var answer = [];\n      var numRightAnswer = Math.floor(Math.random() * 5);\n      var forCheckRepeat = new Set();\n      forCheckRepeat.add(this.model.listWords[this.model.currentNumWord]);\n\n      var _loop = function _loop(i) {\n        var wordInfo = getRandomItemFromArray(_this3.model.listWords, forCheckRepeat);\n        forCheckRepeat.add(wordInfo);\n\n        if (i === numRightAnswer) {\n          wordInfo = _this3.model.listWords[_this3.model.currentNumWord];\n        }\n\n        var word = createTag(\'span\', \'\', wordInfo.wordTranslate);\n        var contain = createTag(\'div\', CSSClass.gameAudioAnswer);\n        var num = createTag(\'span\', CSSClass.gameAudioAnswerNum, "".concat(i + 1));\n\n        _this3.model.listAnswerOnPage.push(contain);\n\n        if (i === numRightAnswer) {\n          _this3.model.rightAnswerOnPage = contain;\n\n          contain.onclick = function () {\n            return _this3.controller.rightAnswer(contain);\n          };\n        } else {\n          _this3.model.wrongAnswerOnPage.push(contain);\n\n          contain.onclick = function () {\n            return _this3.controller.wrongAnswer(contain);\n          };\n        }\n\n        contain.append(num, word);\n        answer.push(contain);\n      };\n\n      for (var i = 0; i < 5; i += 1) {\n        _loop(i);\n      }\n\n      this.controller.addListener();\n      wrapper.append.apply(wrapper, answer);\n      return wrapper;\n    }\n  }, {\n    key: "dimLightAnswers",\n    value: function dimLightAnswers(answers) {\n      answers.forEach(function (item) {\n        return item.classList.add(CSSClass.dimLight);\n      });\n    }\n  }, {\n    key: "createHeaderRightAnswer",\n    value: function createHeaderRightAnswer() {\n      var answerWords = createTag(\'span\', \'\', this.model.listWords[this.model.currentNumWord].word);\n      this.blockVoice.after(answerWords);\n      this.blockVoice.classList.add(CSSClass.rightAnswer);\n      this.blockHeader.append(this.controller.img);\n    }\n  }, {\n    key: "addLineThroughWrongAnswer",\n    value: function addLineThroughWrongAnswer(block) {\n      if (block) {\n        block.classList.add(CSSClass.lineThrough);\n      }\n    }\n  }, {\n    key: "createButtonNextWord",\n    value: function createButtonNextWord() {\n      var _this4 = this;\n\n      this.buttonUnknown.classList.add(CSSClass.fillGray, CSSClass.deleteBorder);\n      this.buttonUnknown.innerHTML = \'<img src = "./assets/svg/arrow-right.svg" alt = "next word">\';\n\n      this.buttonUnknown.onclick = function () {\n        return _this4.controller.nextWord();\n      };\n    }\n  }, {\n    key: "showResults",\n    value: function showResults() {\n      this.gameAudioContainer.innerHTML = \'\';\n      this.gameAudioContainer.append(this.createResultBlock(), this.createButtonsForResult());\n    }\n  }, {\n    key: "createButtonsForResult",\n    value: function createButtonsForResult() {\n      var _this5 = this;\n\n      var wrapper = createTag(\'div\', CSSClass.gameAudioResultButtons);\n      var btnRestartGame = createTag(\'button\', \'\', \'Играть еще\');\n\n      btnRestartGame.onclick = function () {\n        return _this5.controllerApp.openPage(_this5.init());\n      };\n\n      var btnGameList = createTag(\'button\', \'\', \'К списку игр\');\n\n      btnGameList.onclick = function () {\n        window.location.hash = IdPages.games;\n      };\n\n      wrapper.append(btnRestartGame, btnGameList);\n      return wrapper;\n    }\n  }, {\n    key: "createResultBlock",\n    value: function createResultBlock() {\n      var wrapper = createTag(\'div\', [CSSClass.gameAudioResultBlock, CSSClass.resultBlock]);\n      var title = createTag(\'h3\', CSSClass.resultBlockTitle, \'Ваш результат\');\n      var rightAnswersBlock = this.createRightAnswersResult();\n      var hr = createTag(\'hr\', \'\');\n      var wrongAnswersBlock = this.createWrongAnswersResult();\n      wrapper.append(title, rightAnswersBlock, hr, wrongAnswersBlock);\n      return wrapper;\n    }\n  }, {\n    key: "createRightAnswersResult",\n    value: function createRightAnswersResult() {\n      var _this6 = this;\n\n      var wrapper = createTag(\'div\', CSSClass.resultBlockRightAnswers);\n      var title = createTag(\'h3\', CSSClass.title, "\\u041F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E: ".concat(this.model.rightAnswers.length));\n      wrapper.append(title);\n      this.model.rightAnswers.forEach(function (answer) {\n        wrapper.append(_this6.createResultWord(answer));\n      });\n      return wrapper;\n    }\n  }, {\n    key: "createWrongAnswersResult",\n    value: function createWrongAnswersResult() {\n      var _this7 = this;\n\n      var wrapper = createTag(\'div\', CSSClass.resultBlockWrongAnswers);\n      var title = createTag(\'h3\', CSSClass.title, "\\u041E\\u0448\\u0438\\u0431\\u043A\\u0438: ".concat(this.model.wrongAnswers.length));\n      wrapper.append(title);\n      this.model.wrongAnswers.forEach(function (answer) {\n        wrapper.append(_this7.createResultWord(answer));\n      });\n      return wrapper;\n    }\n  }, {\n    key: "createResultWord",\n    value: function createResultWord(wordResult) {\n      var _this8 = this;\n\n      var wrapper = createTag(\'div\', CSSClass.resultBlockAnswer);\n      var voice = createImg(\'./assets/svg/voice.svg\', CSSClass.resultBlockVoice, \'voice\');\n\n      voice.onclick = function () {\n        new Audio("".concat(_this8.server.port, "/").concat(wordResult.audio)).play();\n      };\n\n      var word = createTag(\'div\', \'\');\n      var english = createTag(\'span\', CSSClass.resultBlockEnglishWord, wordResult.word);\n      var dash = createTag(\'span\', \'\', \'  -  \');\n      var russian = createTag(\'span\', \'\', wordResult.wordTranslate);\n      word.append(english, dash, russian);\n      wrapper.append(voice, word);\n      return wrapper;\n    }\n  }]);\n\n  return ViewAudioGame;\n}();\n;// CONCATENATED MODULE: ./script/view/pages/games/gamesPage.ts\nfunction gamesPage_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction gamesPage_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction gamesPage_createClass(Constructor, protoProps, staticProps) { if (protoProps) gamesPage_defineProperties(Constructor.prototype, protoProps); if (staticProps) gamesPage_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\nvar GamesPage = /*#__PURE__*/function () {\n  function GamesPage() {\n    gamesPage_classCallCheck(this, GamesPage);\n\n    this.audioGame = new ViewAudioGame();\n  }\n\n  gamesPage_createClass(GamesPage, [{\n    key: "init",\n    value: function init() {\n      var wrapper = createTag(\'div\', CSSClass.gamesPage);\n      wrapper.style.backgroundImage = \'url(./assets/img/gamePageBackground.jpg)\';\n      var audioGame = this.createIcoGame(AudioGameText.name, \'url(./assets/img/games/audioGame_background.svg)\', IdPages.gameAudio);\n      var sprintGame = this.createIcoGame(SprintGameText.name, \'url(./assets/img/games/sprintGame_background.svg)\', IdPages.gameSprint);\n      wrapper.append(audioGame, sprintGame);\n      return wrapper;\n    }\n  }, {\n    key: "createIcoGame",\n    value: function createIcoGame(nameGame, urlImg, hash) {\n      var game = createTag(\'div\', CSSClass.gamesPageGame);\n      game.style.backgroundImage = urlImg;\n      var name = createTag(\'p\', CSSClass.gamesPageGameName, nameGame);\n      game.append(name);\n\n      game.onclick = function () {\n        window.location.hash = hash;\n      };\n\n      return game;\n    }\n  }]);\n\n  return GamesPage;\n}();\n;// CONCATENATED MODULE: ./script/view/pages/mainPage/aboutProject.ts\nfunction aboutProject_toConsumableArray(arr) { return aboutProject_arrayWithoutHoles(arr) || aboutProject_iterableToArray(arr) || aboutProject_unsupportedIterableToArray(arr) || aboutProject_nonIterableSpread(); }\n\nfunction aboutProject_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction aboutProject_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return aboutProject_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return aboutProject_arrayLikeToArray(o, minLen); }\n\nfunction aboutProject_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction aboutProject_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return aboutProject_arrayLikeToArray(arr); }\n\nfunction aboutProject_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction aboutProject_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction aboutProject_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction aboutProject_createClass(Constructor, protoProps, staticProps) { if (protoProps) aboutProject_defineProperties(Constructor.prototype, protoProps); if (staticProps) aboutProject_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\nvar AboutProject = /*#__PURE__*/function () {\n  function AboutProject() {\n    aboutProject_classCallCheck(this, AboutProject);\n  }\n\n  aboutProject_createClass(AboutProject, [{\n    key: "init",\n    value: function init() {\n      var _this = this;\n\n      var wrapper = createTag(\'div\', IdPages.aboutProject);\n      var title = createTag(\'h2\', CSSClass.aboutProjectTitle, AboutPtojectText.title);\n      var projectText = createTag(\'p\', CSSClass.aboutProjectText, AboutPtojectText.text);\n      var items = createTag(\'div\', CSSClass.aboutProjectAdvancedItems);\n      items.append.apply(items, aboutProject_toConsumableArray(this.advanced()));\n      var wrapperBtn = createTag(\'div\', CSSClass.aboutProjectBtnWrapper);\n      var aboutTeamBtn = createTag(\'a\', CSSClass.aboutProjectBtn, NamePages.aboutTeam);\n      aboutTeamBtn.href = "#".concat(IdPages.aboutTeam);\n      var youtubeBtn = createTag(\'div\', CSSClass.aboutProjectBtn, NamePages.aboutProjectYoutube);\n      wrapperBtn.append(aboutTeamBtn, youtubeBtn);\n\n      youtubeBtn.onclick = function (event) {\n        return _this.addAboutProjectYoutubeBtn(event);\n      };\n\n      wrapper.append(title, projectText, items, wrapperBtn);\n      return wrapper;\n    }\n  }, {\n    key: "advanced",\n    value: function advanced() {\n      var svgEbook = "<img src = \'./assets/svg/".concat(IdPages.ebook, ".svg\' alt = ").concat(IdPages.ebook, ">");\n      var svgDictionary = "<img src = \'./assets/svg/".concat(IdPages.dictionary, ".svg\' alt = ").concat(IdPages.dictionary, ">");\n      var svgGame = "<img src = \'./assets/svg/".concat(IdPages.games, ".svg\' alt = ").concat(IdPages.games, ">");\n      var svgStatistics = "<img src = \'./assets/svg/".concat(IdPages.statistics, ".svg\' alt = ").concat(IdPages.statistics, ">");\n      var itemEbook = this.createItem(svgEbook, NamePages.ebook, AboutPtojectText.ebookText);\n      var itemDictionary = this.createItem(svgDictionary, NamePages.dictionary, AboutPtojectText.dictionaryText);\n      var itemGame = this.createItem(svgGame, NamePages.games, AboutPtojectText.gameText);\n      var itemStatistics = this.createItem(svgStatistics, NamePages.statistics, AboutPtojectText.statisticsText);\n      var items = [itemEbook, itemDictionary, itemGame, itemStatistics];\n      return items;\n    }\n  }, {\n    key: "createItem",\n    value: function createItem(svg, name, text) {\n      var wrapper = createTag(\'div\', CSSClass.aboutProjectAdvancedItem);\n      var itemSVG = createTag(\'div\', CSSClass.aboutProjectAdvancedSvg, svg);\n      var itemName = createTag(\'div\', CSSClass.aboutProjectAdvancedName, name);\n      var itemText = createTag(\'div\', CSSClass.aboutProjectAdvancedText, text);\n      wrapper.append(itemSVG, itemName, itemText);\n      return wrapper;\n    }\n  }, {\n    key: "addAboutProjectYoutubeBtn",\n    value: function addAboutProjectYoutubeBtn(event) {\n      var wrapper = document.querySelector(".".concat(CSSClass.aboutProjectAdvancedItems));\n      var btn = event.currentTarget;\n      wrapper.classList.toggle(CSSClass.aboutProjectBtnYoutube);\n\n      if (wrapper.classList.contains(CSSClass.aboutProjectBtnYoutube)) {\n        btn.innerHTML = "".concat(AboutPtojectText.aboutProjectBtn);\n        wrapper.innerHTML = AboutPtojectText.youtubeFrame;\n      } else {\n        wrapper.innerHTML = \'\';\n        btn.innerHTML = "".concat(AboutPtojectText.aboutProjectYoutube);\n        wrapper.append.apply(wrapper, aboutProject_toConsumableArray(this.advanced()));\n      }\n    }\n  }]);\n\n  return AboutProject;\n}();\n;// CONCATENATED MODULE: ./script/view/pages/aboutTeam/aboutTeam.ts\nfunction aboutTeam_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction aboutTeam_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction aboutTeam_createClass(Constructor, protoProps, staticProps) { if (protoProps) aboutTeam_defineProperties(Constructor.prototype, protoProps); if (staticProps) aboutTeam_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\nvar maxDone = [\'Страница регистрации и логина\', \'Игра "Спринт"\', \'Игра "Aудиовызов"\', \'Страница Игры\', \'Создание API\'];\nvar AnatoliDone = [\'Главная страница\', \'Страница статистики\', \'Страница «О команде»\', \'Описание проекта\'];\nvar IlyaDone = [\'Страница Учебник\', \'Страница Словарь\'];\nvar AboutTeam = /*#__PURE__*/function () {\n  function AboutTeam() {\n    aboutTeam_classCallCheck(this, AboutTeam);\n  }\n\n  aboutTeam_createClass(AboutTeam, [{\n    key: "init",\n    value: function init() {\n      var wrapper = createTag(\'div\', IdPages.aboutTeam);\n      var title = createTag(\'h2\', CSSClass.aboutTeamTitle, AboutTeamText.aboutTeamTitle);\n      var items = createTag(\'div\', CSSClass.aboutTeamItems);\n      var maxLapko = this.createDeveloper(AboutTeamText.maxFoto, FooterGithubUser.nameMax, FooterGithubUser.nameGithubMax, AboutTeamText.jobTeamLead);\n      maxLapko.append(this.addDoneList(maxDone));\n      var Anatoli = this.createDeveloper(AboutTeamText.anatoliFoto, FooterGithubUser.nameAnatoli, FooterGithubUser.nameGithubAnatoli, AboutTeamText.jobDev);\n      Anatoli.append(this.addDoneList(AnatoliDone));\n      var Ilya = this.createDeveloper(AboutTeamText.ilyaFoto, FooterGithubUser.nameIlya, FooterGithubUser.nameGithubIlya, AboutTeamText.jobDev);\n      Ilya.append(this.addDoneList(IlyaDone));\n      items.append(maxLapko, Anatoli, Ilya);\n      wrapper.append(title, items);\n      return wrapper;\n    }\n  }, {\n    key: "createDeveloper",\n    value: function createDeveloper(foto, name, githubName, job) {\n      var item = createTag(\'div\', CSSClass.aboutTeamItem, foto);\n      var devName = createTag(\'p\', CSSClass.aboutTeamItemName, name);\n      var github = createTag(\'a\', CSSClass.aboutTeamItemGithub);\n      github.target = \'_blank\';\n      github.href = FooterGithubUser.urlToGitHubeMax;\n      github.innerHTML = "<img class = \\"".concat(CSSClass.aboutTeamItemGithubSvg, "\\"\\n    src = \\"./assets/svg/github.svg\\" alt = \\"github\\">");\n      github.append(createTag(\'div\', CSSClass.aboutTeamItemGithubName, githubName));\n      var jobDev = createTag(\'p\', CSSClass.aboutTeamItemJob, job);\n      item.append(devName, github, jobDev);\n      return item;\n    }\n  }, {\n    key: "addDoneList",\n    value: function addDoneList(data) {\n      var wrapper = createTag(\'ol\', CSSClass.aboutTeamItemList);\n      data.forEach(function (elem) {\n        var done = createTag(\'li\', CSSClass.aboutTeamItemListItem, elem);\n        wrapper.append(done);\n      });\n      return wrapper;\n    }\n  }]);\n\n  return AboutTeam;\n}();\n// EXTERNAL MODULE: ../node_modules/chart.js/auto/auto.mjs + 2 modules\nvar auto = __webpack_require__(6392);\n;// CONCATENATED MODULE: ./script/view/pages/statistics/statisticsController.ts\nfunction statisticsController_typeof(obj) { "@babel/helpers - typeof"; return statisticsController_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, statisticsController_typeof(obj); }\n\nfunction statisticsController_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ statisticsController_regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == statisticsController_typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'throw\' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction statisticsController_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction statisticsController_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { statisticsController_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { statisticsController_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction statisticsController_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction statisticsController_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction statisticsController_createClass(Constructor, protoProps, staticProps) { if (protoProps) statisticsController_defineProperties(Constructor.prototype, protoProps); if (staticProps) statisticsController_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction statisticsController_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nvar date = new Date();\nvar curDate = "".concat(date.getDate(), ".").concat(date.getMonth());\nvar statData = {\n  learnedWords: 0,\n  optional: statisticsController_defineProperty({}, curDate, {\n    countNewWords: 0,\n    rightAnswers: 0,\n    wrongAnswers: 0,\n    serialRightAnswers: 0,\n    gameSprint: {\n      countNewWords: 0,\n      rightAnswers: 0,\n      wrongAnswers: 0,\n      serialRightAnswers: 0\n    },\n    gameAudioCall: {\n      countNewWords: 0,\n      rightAnswers: 0,\n      wrongAnswers: 0,\n      serialRightAnswers: 0\n    }\n  })\n};\nvar StatisticsController = /*#__PURE__*/function () {\n  function StatisticsController() {\n    statisticsController_classCallCheck(this, StatisticsController);\n\n    this.server = new Server();\n  }\n\n  statisticsController_createClass(StatisticsController, [{\n    key: "init",\n    value: function () {\n      var _init = statisticsController_asyncToGenerator( /*#__PURE__*/statisticsController_regeneratorRuntime().mark(function _callee() {\n        var data;\n        return statisticsController_regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.server.getStatistics().then(function (res) {\n                  return res.json();\n                }).then(function (obj) {\n                  return obj;\n                }).catch(function () {\n                  return statData;\n                });\n\n              case 2:\n                data = _context.sent;\n                return _context.abrupt("return", data);\n\n              case 4:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }]);\n\n  return StatisticsController;\n}();\n;// CONCATENATED MODULE: ./script/view/pages/statistics/statisticsView.ts\nfunction statisticsView_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction statisticsView_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction statisticsView_createClass(Constructor, protoProps, staticProps) { if (protoProps) statisticsView_defineProperties(Constructor.prototype, protoProps); if (staticProps) statisticsView_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\nvar StatisticsView = /*#__PURE__*/function () {\n  function StatisticsView() {\n    statisticsView_classCallCheck(this, StatisticsView);\n  }\n\n  statisticsView_createClass(StatisticsView, [{\n    key: "init",\n    value: function init() {\n      var _this = this;\n\n      var wrapper = createTag(\'div\', IdPages.statistics);\n\n      if (!userInfo.login) {\n        var noLogin = createTag(\'div\', CSSClass.statisticsNoLogin, StatisticsText.noLogin);\n        wrapper.append(noLogin);\n      } else {\n        var firstName = userInfo.name[0].toUpperCase() + userInfo.name.slice(1);\n        var text = createTag(\'p\', CSSClass.statisticsTitle, "".concat(firstName, "`s statistics"));\n        var controller = new StatisticsController();\n        controller.init().then(function (response) {\n          console.log(response);\n          wrapper.append(text, _this.statisticsPage(response));\n        });\n      }\n\n      return wrapper;\n    }\n  }, {\n    key: "statisticsPage",\n    value: function statisticsPage(data) {\n      var wrapper = createTag(\'div\', CSSClass.statisticsWrapper);\n      var carDay = createTag(\'div\', CSSClass.statisticsCurDay, \'Статистика по мини-играм\');\n      var canvasCurDay = createTag(\'canvas\', \'\');\n      canvasCurDay.getContext(\'2d\');\n      this.canvasCurDay(canvasCurDay, data.optional);\n      carDay.append(canvasCurDay);\n      var allDay = createTag(\'div\', CSSClass.statisticsAllDay, \'Статистика за день\');\n      var canvasAllDay = createTag(\'canvas\', \'\');\n      canvasAllDay.getContext(\'2d\');\n      this.canvasAllDay(canvasAllDay, data.optional, data.learnedWords);\n      allDay.append(canvasAllDay);\n      var timeForDay = createTag(\'div\', CSSClass.statisticsTimeForDay, \'Статистика новых слов по дням\');\n      var canvasTimeForDay = createTag(\'canvas\', \'\');\n      canvasTimeForDay.getContext(\'2d\');\n      this.canvasTimeForDay(canvasTimeForDay, data.optional);\n      timeForDay.append(canvasTimeForDay);\n      var timeForAll = createTag(\'div\', CSSClass.statisticsTimeForAll, \'Статистика увеличения изученных слов по дням\');\n      var canvasTimeForAll = createTag(\'canvas\', \'\');\n      canvasTimeForAll.getContext(\'2d\');\n      this.canvasTimeForAll(canvasTimeForAll, data.optional, data.learnedWords);\n      timeForAll.append(canvasTimeForAll);\n      wrapper.append(carDay, allDay, timeForDay, timeForAll);\n      return wrapper;\n    }\n  }, {\n    key: "canvasCurDay",\n    value: function canvasCurDay(canvas, data) {\n      var curDay = Object.keys(data)[Object.keys(data).length - 1];\n      var games = Object.keys(data[curDay]).filter(function (el) {\n        return el === \'gameSprint\' || el === \'gameAudioCall\';\n      });\n      var one = data[curDay][games[0]];\n      var two = data[curDay][games[1]];\n      var gameSets = null;\n      var gameSetsTwo = null;\n      if (one) gameSets = Object.values(one);\n      if (two) gameSetsTwo = Object.values(two);\n      var gameSprint = [0, 0, 0];\n      var gameAudio = [0, 0, 0];\n\n      if (gameSets) {\n        gameSprint = [gameSets[0], Math.floor(gameSets[1] / gameSets[0] * 100), gameSets[3]];\n      }\n\n      if (gameSetsTwo) {\n        gameAudio = [gameSetsTwo[0], Math.floor(gameSetsTwo[1] / gameSetsTwo[0] * 100), gameSetsTwo[3]];\n      } //  eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n      var mychart = new auto/* default */.Z(canvas, {\n        type: \'bar\',\n        data: {\n          labels: games,\n          datasets: [{\n            label: \'новые слова\',\n            data: [gameSprint[0], gameAudio[0]],\n            backgroundColor: [\'rgba(80, 150, 132, 0.5)\'],\n            borderColor: [\'rgba(255, 99, 132, 1)\'],\n            borderWidth: 1\n          }, {\n            label: \'правильные, %\',\n            data: [gameSprint[1], gameAudio[1]],\n            backgroundColor: [\'rgba(230, 159, 64, 0.5)\'],\n            borderColor: [\'rgba(255, 159, 64, 1)\'],\n            borderWidth: 1\n          }, {\n            label: \'серия правильных ответов\',\n            data: [gameSprint[2], gameAudio[2]],\n            backgroundColor: [\'rgba(190, 60, 64, 0.5)\'],\n            borderColor: [\'rgba(255, 159, 64, 1)\'],\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: "canvasAllDay",\n    value: function canvasAllDay(canvas, data, learnWord) {\n      var curDay = Object.keys(data)[Object.keys(data).length - 1];\n      var prosent = Math.trunc(data[curDay].rightAnswers / data[curDay].countNewWords * 100); //  eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n      var mychart = new auto/* default */.Z(canvas, {\n        type: \'line\',\n        data: {\n          labels: [\'start\', \'Current\'],\n          datasets: [{\n            label: \'Количество новых слов\',\n            backgroundColor: [\'rgba(255, 99, 132, 0.7)\', \'rgba(255, 99, 132, 0.7)\', \'rgba(255, 99, 132, 0.7)\'],\n            data: [0, data[curDay].countNewWords],\n            borderColor: [\'rgba(255, 99, 132, 0.7)\'],\n            borderWidth: 1.5\n          }, {\n            label: \'Количество изученных слов\',\n            data: [0, learnWord],\n            backgroundColor: [\'rgba(54, 162, 235, 1)\', \'rgba(54, 162, 235, 1)\', \'rgba(54, 162, 235, 1)\'],\n            borderColor: [\'rgba(54, 162, 235, 1)\'],\n            borderWidth: 1.5\n          }, {\n            label: \'Правильных ответов, %\',\n            data: [0, prosent],\n            backgroundColor: [\'rgba(255, 206, 86, 1)\', \'rgba(255, 206, 86, 1)\', \'rgba(255, 206, 86, 1)\'],\n            borderColor: [\'rgba(255, 206, 86, 1)\'],\n            borderWidth: 1.5\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: "canvasTimeForDay",\n    value: function canvasTimeForDay(canvas, data) {\n      var days = Object.keys(data);\n      var dates = days.map(function (el) {\n        var d = el.split(\'.\');\n        return "".concat(d[0], ".").concat(+d[1] + 1, ".2022");\n      });\n      var rightAnsver = days.map(function (el) {\n        return data[el].countNewWords;\n      }); //  eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n      var mychart = new auto/* default */.Z(canvas, {\n        type: \'line\',\n        data: {\n          labels: dates,\n          datasets: [{\n            label: \'Количество новых слов по дням\',\n            backgroundColor: [\'rgba(255, 99, 132, 0.7)\'],\n            data: rightAnsver,\n            borderColor: [\'rgba(255, 99, 132, 0.7)\'],\n            borderWidth: 1.5\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: "canvasTimeForAll",\n    value: function canvasTimeForAll(canvas, data, learnWord) {\n      var days = Object.keys(data);\n      var dates = days.map(function (el) {\n        var d = el.split(\'.\');\n        return "".concat(d[0], ".").concat(+d[1] + 1, ".2022");\n      }); // const rightAnsver = days.map((el) => data[el].countNewWords);\n      // const upperRightAnsver = rightAnsver.map((n, i, a) => a.reduce((acc, m, j) => acc + m * (j <= i), 0));\n      //  eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n      var mychart = new auto/* default */.Z(canvas, {\n        type: \'line\',\n        data: {\n          labels: dates,\n          datasets: [{\n            label: \'Увеличение изученных слов по дням\',\n            backgroundColor: [\'rgba(38, 5, 252, 1)\'],\n            data: [learnWord],\n            borderColor: [\'blue\'],\n            borderWidth: 1.5\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  }]);\n\n  return StatisticsView;\n}();\n;// CONCATENATED MODULE: ./script/view/components/sprintGame/modelSprintGame.ts\nvar modelSprintGame = {\n  isTrue: false,\n  englishWord: \'\',\n  translateWord: \'\',\n  listWords: [],\n  currentNumWord: 0,\n  lastNumWord: 0,\n  difficulty: 2,\n  rightAnswers: [],\n  wrongAnswers: [],\n  account: 0,\n  serialCorrectAnswerForAccount: 0,\n  serialCorrectAnswer: 0,\n  maxSerialCorrectAnswer: 0,\n  isCurrentAnswerRights: false,\n  resetAll: function resetAll() {\n    this.listWords = [];\n    this.currentNumWord = 0;\n    this.lastNumWord = 0;\n    this.difficulty = 2;\n    this.isTrue = false;\n    this.rightAnswers = [];\n    this.wrongAnswers = [];\n    this.account = 0;\n    this.englishWord = \'\';\n    this.translateWord = \'\';\n    this.serialCorrectAnswerForAccount = 0;\n    this.serialCorrectAnswer = 0;\n    this.maxSerialCorrectAnswer = 0;\n    this.isCurrentAnswerRights = false;\n  },\n  applySettingsNextPage: function applySettingsNextPage() {\n    this.currentNumWord += 1;\n    this.isTrue = false;\n    this.englishWord = \'\';\n    this.translateWord = \'\';\n    this.isCurrentAnswerRights = false;\n  }\n};\n;// CONCATENATED MODULE: ./script/view/components/sprintGame/controllerSprintGame.ts\nfunction controllerSprintGame_typeof(obj) { "@babel/helpers - typeof"; return controllerSprintGame_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, controllerSprintGame_typeof(obj); }\n\nfunction controllerSprintGame_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ controllerSprintGame_regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == controllerSprintGame_typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'throw\' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction controllerSprintGame_toConsumableArray(arr) { return controllerSprintGame_arrayWithoutHoles(arr) || controllerSprintGame_iterableToArray(arr) || controllerSprintGame_unsupportedIterableToArray(arr) || controllerSprintGame_nonIterableSpread(); }\n\nfunction controllerSprintGame_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction controllerSprintGame_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return controllerSprintGame_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return controllerSprintGame_arrayLikeToArray(o, minLen); }\n\nfunction controllerSprintGame_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction controllerSprintGame_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return controllerSprintGame_arrayLikeToArray(arr); }\n\nfunction controllerSprintGame_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction controllerSprintGame_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction controllerSprintGame_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { controllerSprintGame_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { controllerSprintGame_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction controllerSprintGame_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction controllerSprintGame_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction controllerSprintGame_createClass(Constructor, protoProps, staticProps) { if (protoProps) controllerSprintGame_defineProperties(Constructor.prototype, protoProps); if (staticProps) controllerSprintGame_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\n\nvar ControllerSprintGame = /*#__PURE__*/function () {\n  function ControllerSprintGame(view) {\n    controllerSprintGame_classCallCheck(this, ControllerSprintGame);\n\n    this.controllerApp = new ControllerApp();\n    this.server = new Server();\n    this.view = view;\n    this.model = modelSprintGame;\n    this.sendStatistics = new SendStatistics(\'gameSprint\', this.model);\n  }\n\n  controllerSprintGame_createClass(ControllerSprintGame, [{\n    key: "loadWordsAndStartGame",\n    value: function () {\n      var _loadWordsAndStartGame = controllerSprintGame_asyncToGenerator( /*#__PURE__*/controllerSprintGame_regeneratorRuntime().mark(function _callee(list) {\n        var _this$model$listWords;\n\n        var listWords, randomPage;\n        return controllerSprintGame_regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.model.resetAll();\n\n                if (!list) {\n                  _context.next = 5;\n                  break;\n                }\n\n                listWords = controllerSprintGame_toConsumableArray(list);\n                _context.next = 9;\n                break;\n\n              case 5:\n                randomPage = Math.floor(Math.random() * 30);\n                _context.next = 8;\n                return this.server.getAllWords(this.model.difficulty - 1, randomPage);\n\n              case 8:\n                listWords = _context.sent;\n\n              case 9:\n                shuffleWordList(listWords);\n                this.model.lastNumWord = listWords.length - 1;\n\n                (_this$model$listWords = this.model.listWords).push.apply(_this$model$listWords, controllerSprintGame_toConsumableArray(listWords));\n\n                this.createSettingsForModel();\n                this.controllerApp.openPage(this.view.createGame());\n                this.addListener();\n\n              case 15:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadWordsAndStartGame(_x) {\n        return _loadWordsAndStartGame.apply(this, arguments);\n      }\n\n      return loadWordsAndStartGame;\n    }()\n  }, {\n    key: "nextWord",\n    value: function nextWord() {\n      if (this.model.currentNumWord === this.model.lastNumWord) {\n        resetKeyDownListener();\n        this.view.showResults();\n        resetKeyDownListener();\n        this.sendStatistics.createStatistic();\n        return;\n      }\n\n      this.model.applySettingsNextPage();\n      this.createSettingsForModel();\n      this.view.changeWordOnPage();\n    }\n  }, {\n    key: "createSettingsForModel",\n    value: function createSettingsForModel() {\n      this.model.englishWord = this.model.listWords[this.model.currentNumWord].word;\n\n      if (Math.random() < 0.5) {\n        this.createSettingsModelForCorrectAnswer();\n      } else {\n        this.createSettingsModelForIncorrectAnswer();\n      }\n    }\n  }, {\n    key: "createSettingsModelForCorrectAnswer",\n    value: function createSettingsModelForCorrectAnswer() {\n      this.model.isTrue = true;\n      this.model.translateWord = this.model.listWords[this.model.currentNumWord].wordTranslate;\n    }\n  }, {\n    key: "createSettingsModelForIncorrectAnswer",\n    value: function createSettingsModelForIncorrectAnswer() {\n      this.model.isTrue = false;\n      var indexEnglishWord = getRandomIndexFromArray(this.model.listWords.length, this.model.currentNumWord);\n      this.model.translateWord = this.model.listWords[indexEnglishWord].wordTranslate;\n    }\n  }, {\n    key: "changeDifficulty",\n    value: function changeDifficulty(difficulty) {\n      this.model.difficulty = difficulty;\n    }\n  }, {\n    key: "checkAnswer",\n    value: function checkAnswer(answer) {\n      if (answer === this.model.isTrue) {\n        this.rightAnswer();\n      } else {\n        this.wrongAnswer();\n      }\n\n      this.view.addMarkToCounterCorrectAnswer();\n      this.nextWord();\n    }\n  }, {\n    key: "wrongAnswer",\n    value: function wrongAnswer() {\n      this.model.wrongAnswers.push(this.model.listWords[this.model.currentNumWord]);\n      this.model.serialCorrectAnswerForAccount = 0;\n      this.model.serialCorrectAnswer = 0;\n      var audio = new Audio(wrong_namespaceObject);\n      audio.play();\n    }\n  }, {\n    key: "rightAnswer",\n    value: function rightAnswer() {\n      this.model.rightAnswers.push(this.model.listWords[this.model.currentNumWord]);\n      this.model.isCurrentAnswerRights = true;\n      var audio = new Audio(correct_namespaceObject);\n      audio.play();\n      this.model.serialCorrectAnswer += 1;\n\n      if (this.model.maxSerialCorrectAnswer < this.model.serialCorrectAnswer) {\n        this.model.maxSerialCorrectAnswer = this.model.serialCorrectAnswer;\n      }\n\n      if (this.model.serialCorrectAnswerForAccount >= 3) {\n        this.model.serialCorrectAnswerForAccount = 0;\n        this.model.account += 40;\n      } else {\n        this.model.serialCorrectAnswerForAccount += 1;\n      }\n\n      this.model.account += 20;\n      this.view.changeCurrentAccount();\n    }\n  }, {\n    key: "addListener",\n    value: function addListener() {\n      var _this = this;\n\n      document.body.onkeydown = function (e) {\n        switch (e.key) {\n          case \'ArrowLeft\':\n            _this.view.correctButton.click();\n\n            break;\n\n          case \'ArrowRight\':\n            _this.view.incorrectButton.click();\n\n            break;\n\n          default:\n        }\n      };\n    }\n  }]);\n\n  return ControllerSprintGame;\n}();\n;// CONCATENATED MODULE: ./script/view/components/sprintGame/viewSprintGame.ts\nfunction viewSprintGame_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction viewSprintGame_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction viewSprintGame_createClass(Constructor, protoProps, staticProps) { if (protoProps) viewSprintGame_defineProperties(Constructor.prototype, protoProps); if (staticProps) viewSprintGame_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\n\nvar ViewSprintGame = /*#__PURE__*/function () {\n  function ViewSprintGame() {\n    viewSprintGame_classCallCheck(this, ViewSprintGame);\n\n    this.model = modelSprintGame;\n    this.model.resetAll();\n    this.server = new Server();\n    this.controller = new ControllerSprintGame(this);\n    this.controllerApp = new ControllerApp();\n  }\n\n  viewSprintGame_createClass(ViewSprintGame, [{\n    key: "init",\n    value: function init() {\n      var wrapper = createTag(\'div\', CSSClass.gameSprint);\n      var preview = createTag(\'div\', CSSClass.gameSprintPreview);\n      wrapper.style.backgroundImage = \'url(./assets/img/games/sprintGame_background.svg)\';\n      var title = createTag(\'h3\', CSSClass.gameSprintTitle, SprintGameText.name);\n      preview.append(title, this.createDescriptionGame(), this.createBlockWithStartButtons());\n      wrapper.append(preview);\n      this.gameSprintContainer = wrapper;\n      return wrapper;\n    }\n  }, {\n    key: "createDescriptionGame",\n    value: function createDescriptionGame() {\n      var wrapper = createTag(\'div\', CSSClass.gameSprintDescriptionBlock);\n      var description = createTag(\'h4\', CSSClass.gameSprintDescription, SprintGameText.description);\n      var listControlDescription = createTag(\'ul\', CSSClass.gameSprintDescriptionControl);\n      var contrMouseDescription = createTag(\'li\', \'\', SprintGameText.descriptionControlMouse);\n      var contrKeyDescription = createTag(\'li\', \'\', SprintGameText.descriptionControlKey);\n      listControlDescription.append(contrMouseDescription, contrKeyDescription);\n      wrapper.append(description, listControlDescription);\n      return wrapper;\n    }\n  }, {\n    key: "createBlockWithStartButtons",\n    value: function createBlockWithStartButtons() {\n      var _this = this;\n\n      var wrapper = createTag(\'div\', CSSClass.gameSprintBlockButtons);\n      var startGameButton = createTag(\'button\', CSSClass.gameSprintBlockButtonsStart, SprintGameText.startButton);\n\n      startGameButton.onclick = function () {\n        return _this.controller.loadWordsAndStartGame();\n      };\n\n      var selectedDifficultyButton = createSelect(\'difficulty\', \'selectDifficult\', CSSClass.gameSprintBlockButtonsSelect, createOptionListDifficulty(6, this.model.difficulty));\n      selectedDifficultyButton.addEventListener(\'change\', function () {\n        return _this.controller.changeDifficulty(+selectedDifficultyButton.value);\n      });\n      var fieldset = createTag(\'fieldset\', CSSClass.gameSprintBlockButtonsFieldset);\n      var legendFieldset = createTag(\'legend\', \'\', \'Сложность\');\n      fieldset.append(legendFieldset);\n      var fieldsetBlock = createTag(\'div\', CSSClass.gameSprintBlockButtonsFieldsetBlock);\n      fieldsetBlock.append(fieldset, selectedDifficultyButton);\n      wrapper.append(fieldsetBlock, startGameButton);\n      return wrapper;\n    }\n  }, {\n    key: "createGame",\n    value: function createGame() {\n      var wrapper = createTag(\'div\', CSSClass.gameSprint);\n      var gamePage = createTag(\'div\', CSSClass.gameSprintGame);\n      this.gameSprintContainer = gamePage;\n      wrapper.style.backgroundImage = \'url(./assets/img/games/sprintGame_background.svg)\';\n      var currentAccountBlock = createTag(\'div\', CSSClass.gameSprintCurrentAccount);\n      var currentAccountText = createTag(\'span\', \'\', \'Текущий счет\');\n      var currentAccountNum = createTag(\'span\', \'\', \'0\');\n      this.currentAccount = currentAccountNum;\n      currentAccountBlock.append(currentAccountText, currentAccountNum);\n      gamePage.append(currentAccountBlock, this.createGameBlock());\n      wrapper.append(gamePage);\n      return wrapper;\n    }\n  }, {\n    key: "createGameBlock",\n    value: function createGameBlock() {\n      var wrapper = createTag(\'div\', CSSClass.gameWindow);\n      var englishWord = createTag(\'h3\', CSSClass.gameWindowEnglishWord, this.model.englishWord);\n      var translateWord = createTag(\'h3\', CSSClass.gameWindowRussianWord, this.model.translateWord);\n      this.englishWord = englishWord;\n      this.translateWord = translateWord;\n      var hr = createTag(\'hr\', \'\');\n      wrapper.append(this.createTimer(), this.createCounterCorrectAnswer(), englishWord, translateWord, hr, this.createButtonsForGame());\n      return wrapper;\n    }\n  }, {\n    key: "createCounterCorrectAnswer",\n    value: function createCounterCorrectAnswer() {\n      var wrapper = createTag(\'div\', CSSClass.gameWindowCorrectCounter);\n      var circle = createTag(\'span\', CSSClass.gameWindowCorrectCounterIcon);\n      wrapper.append(circle, circle.cloneNode(), circle.cloneNode());\n      return wrapper;\n    }\n  }, {\n    key: "addMarkToCounterCorrectAnswer",\n    value: function addMarkToCounterCorrectAnswer() {\n      var _this2 = this;\n\n      var circles = document.querySelectorAll(".".concat(CSSClass.gameWindowCorrectCounterIcon));\n      circles.forEach(function (item) {\n        // eslint-disable-next-line no-param-reassign\n        item.innerHTML = \'\';\n      });\n      circles.forEach(function (item, index) {\n        if (index < _this2.model.serialCorrectAnswer) {\n          var imgSucceed = createImg(\'./assets/svg/success.svg\', \'\', \'succeed\');\n          item.append(imgSucceed);\n        }\n      });\n    }\n  }, {\n    key: "changeWordOnPage",\n    value: function changeWordOnPage() {\n      this.englishWord.innerHTML = this.model.englishWord;\n      this.translateWord.innerHTML = this.model.translateWord;\n    }\n  }, {\n    key: "changeCurrentAccount",\n    value: function changeCurrentAccount() {\n      this.currentAccount.innerHTML = "".concat(this.model.account);\n    }\n  }, {\n    key: "createButtonsForGame",\n    value: function createButtonsForGame() {\n      var _this3 = this;\n\n      var buttonsContainer = createTag(\'div\', CSSClass.gameWindowButtons);\n      var correctButton = createTag(\'button\', CSSClass.gameWindowCorrectButton);\n      var arrowLeftForButton = createTag(\'span\', CSSClass.buttonArrow, \'<img src = "./assets/svg/arrow-left.svg" alt = "Correct">\');\n      var textForCorrectButton = createTag(\'span\', \'\', \'верно\');\n      correctButton.append(arrowLeftForButton, textForCorrectButton);\n\n      correctButton.onclick = function () {\n        return _this3.controller.checkAnswer(true);\n      };\n\n      this.correctButton = correctButton;\n      var incorrectButton = createTag(\'button\', CSSClass.gameWindowIncorrectButton);\n      var arrowRightForButton = createTag(\'span\', CSSClass.buttonArrow, \'<img src = "./assets/svg/arrow-right.svg" alt = "Incorrect">\');\n      var textForIncorrectButton = createTag(\'span\', \'\', \'неверно\');\n      incorrectButton.append(textForIncorrectButton, arrowRightForButton);\n\n      incorrectButton.onclick = function () {\n        return _this3.controller.checkAnswer(false);\n      };\n\n      this.incorrectButton = incorrectButton;\n      buttonsContainer.append(correctButton, incorrectButton);\n      return buttonsContainer;\n    }\n  }, {\n    key: "createTimer",\n    value: function createTimer() {\n      var _this4 = this;\n\n      var wrapper = createTag(\'div\', [CSSClass.gameWindowTimerBlock, CSSClass.timerBlock]);\n      var timeCaption = createTag(\'h3\', \'\', \'0\');\n      var svg = document.createElementNS(\'http://www.w3.org/2000/svg\', \'svg\');\n      var circle = document.createElementNS(\'http://www.w3.org/2000/svg\', \'circle\');\n      circle.classList.add(CSSClass.timerBlockCircle);\n      circle.setAttributeNS(null, \'cx\', \'25\');\n      circle.setAttributeNS(null, \'cy\', \'25\');\n      circle.setAttributeNS(null, \'r\', \'20\');\n      circle.setAttributeNS(null, \'stroke-width\', \'4\');\n      circle.setAttributeNS(null, \'fill\', \'none\');\n      svg.append(circle);\n      var time = 60;\n      var i = 0;\n      var finalOffset = 125;\n      var step = finalOffset / time;\n      var circleStyle = circle.style;\n      circleStyle.strokeDasharray = "".concat(finalOffset);\n      circleStyle.strokeDashoffset = \'0\';\n      timeCaption.innerText = "".concat(time);\n      var interval = setInterval(function () {\n        timeCaption.innerText = "".concat(time - i);\n        i += 1;\n\n        if (i > time) {\n          clearInterval(interval);\n          resetKeyDownListener();\n\n          _this4.showResults();\n        } else {\n          circleStyle.strokeDashoffset = "".concat(step * i);\n        }\n      }, 1000);\n      wrapper.append(timeCaption, svg);\n      return wrapper;\n    }\n  }, {\n    key: "showResults",\n    value: function showResults() {\n      this.gameSprintContainer.innerHTML = \'\';\n      this.gameSprintContainer.append(this.createResultBlock(), this.createButtonsForResult());\n    }\n  }, {\n    key: "createButtonsForResult",\n    value: function createButtonsForResult() {\n      var _this5 = this;\n\n      var wrapper = createTag(\'div\', CSSClass.gameSprintResultButtons);\n      var btnRestartGame = createTag(\'button\', \'\', \'Играть еще\');\n\n      btnRestartGame.onclick = function () {\n        return _this5.controllerApp.openPage(_this5.init());\n      };\n\n      var btnGameList = createTag(\'button\', \'\', \'К списку игр\');\n\n      btnGameList.onclick = function () {\n        window.location.hash = IdPages.games;\n      };\n\n      wrapper.append(btnRestartGame, btnGameList);\n      return wrapper;\n    }\n  }, {\n    key: "createResultBlock",\n    value: function createResultBlock() {\n      var wrapper = createTag(\'div\', [CSSClass.gameSprintResultBlock, CSSClass.resultBlock]);\n      var title = createTag(\'h3\', CSSClass.resultBlockTitle, "\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043E\\u0447\\u043A\\u043E\\u0432: ".concat(this.model.account, " "));\n      var rightAnswersBlock = this.createRightAnswersResult();\n      var hr = createTag(\'hr\', \'\');\n      var wrongAnswersBlock = this.createWrongAnswersResult();\n      wrapper.append(title, rightAnswersBlock, hr, wrongAnswersBlock);\n      return wrapper;\n    }\n  }, {\n    key: "createRightAnswersResult",\n    value: function createRightAnswersResult() {\n      var _this6 = this;\n\n      var wrapper = createTag(\'div\', CSSClass.resultBlockRightAnswers);\n      var title = createTag(\'h3\', CSSClass.title, "\\u041F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E: ".concat(this.model.rightAnswers.length));\n      wrapper.append(title);\n      this.model.rightAnswers.forEach(function (answer) {\n        wrapper.append(_this6.createResultWord(answer));\n      });\n      return wrapper;\n    }\n  }, {\n    key: "createWrongAnswersResult",\n    value: function createWrongAnswersResult() {\n      var _this7 = this;\n\n      var wrapper = createTag(\'div\', CSSClass.resultBlockWrongAnswers);\n      var title = createTag(\'h3\', CSSClass.title, "\\u041E\\u0448\\u0438\\u0431\\u043A\\u0438: ".concat(this.model.wrongAnswers.length));\n      wrapper.append(title);\n      this.model.wrongAnswers.forEach(function (answer) {\n        wrapper.append(_this7.createResultWord(answer));\n      });\n      return wrapper;\n    }\n  }, {\n    key: "createResultWord",\n    value: function createResultWord(wordResult) {\n      var _this8 = this;\n\n      var wrapper = createTag(\'div\', CSSClass.resultBlockAnswer);\n      var voice = createImg(\'./assets/svg/voice.svg\', CSSClass.resultBlockVoice, \'voice\');\n\n      voice.onclick = function () {\n        new Audio("".concat(_this8.server.port, "/").concat(wordResult.audio)).play();\n      };\n\n      var word = createTag(\'div\', \'\');\n      var english = createTag(\'span\', CSSClass.resultBlockEnglishWord, wordResult.word);\n      var dash = createTag(\'span\', \'\', \'  -  \');\n      var russian = createTag(\'span\', \'\', wordResult.wordTranslate);\n      word.append(english, dash, russian);\n      wrapper.append(voice, word);\n      return wrapper;\n    }\n  }]);\n\n  return ViewSprintGame;\n}();\n;// CONCATENATED MODULE: ./script/app/app.ts\nfunction app_typeof(obj) { "@babel/helpers - typeof"; return app_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, app_typeof(obj); }\n\nfunction app_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ app_regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == app_typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'throw\' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction app_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction app_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { app_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { app_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction app_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction app_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction app_createClass(Constructor, protoProps, staticProps) { if (protoProps) app_defineProperties(Constructor.prototype, protoProps); if (staticProps) app_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar App = /*#__PURE__*/function () {\n  function App() {\n    app_classCallCheck(this, App);\n\n    this.view = new ViewApp();\n    this.controller = new ControllerApp();\n    this.mainPage = new MainPage();\n    this.server = new Server();\n  }\n\n  app_createClass(App, [{\n    key: "start",\n    value: function () {\n      var _start = app_asyncToGenerator( /*#__PURE__*/app_regeneratorRuntime().mark(function _callee() {\n        return app_regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return window.addEventListener(\'load\', this.startApp.bind(this));\n\n              case 2:\n                _context.next = 4;\n                return window.addEventListener(\'hashchange\', this.startPageUseHash.bind(this));\n\n              case 4:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function start() {\n        return _start.apply(this, arguments);\n      }\n\n      return start;\n    }()\n  }, {\n    key: "startApp",\n    value: function () {\n      var _startApp = app_asyncToGenerator( /*#__PURE__*/app_regeneratorRuntime().mark(function _callee2() {\n        return app_regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.server.updateUserToken().then(function (data) {\n                  return singInUserAndUpdateToken(data);\n                }).catch(function () {});\n\n              case 2:\n                this.controller.startPage(this.view.renderPage);\n                this.startPageUseHash();\n\n              case 4:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function startApp() {\n        return _startApp.apply(this, arguments);\n      }\n\n      return startApp;\n    }()\n  }, {\n    key: "startPageUseHash",\n    value: function startPageUseHash() {\n      resetKeyDownListener();\n      var newHash = window.location.hash.slice(1);\n\n      switch (newHash) {\n        case IdPages.login:\n          {\n            var auth = new AuthorizationView();\n            this.controller.openPage(auth.init());\n            break;\n          }\n\n        case IdPages.main:\n          {\n            this.controller.openPage(this.mainPage.create());\n            break;\n          }\n\n        case IdPages.ebook:\n          {\n            this.controller.openPage(rootTextbook, textbook_Textbook);\n            break;\n          }\n\n        case IdPages.dictionary:\n          {\n            this.controller.openPage(rootDictionary, textbook_Dictionary);\n            break;\n          }\n\n        case IdPages.games:\n          {\n            var gamesPage = new GamesPage();\n            this.controller.openPage(gamesPage.init());\n            break;\n          }\n\n        case IdPages.gameAudio:\n          {\n            var game = new ViewAudioGame();\n            this.controller.openPage(game.init());\n            break;\n          }\n\n        case IdPages.gameSprint:\n          {\n            var _game = new ViewSprintGame();\n\n            this.controller.openPage(_game.init());\n            break;\n          }\n\n        case IdPages.aboutProject:\n          {\n            var aboutProject = new AboutProject();\n            this.controller.openPage(aboutProject.init());\n            break;\n          }\n\n        case IdPages.aboutTeam:\n          {\n            var aboutTeam = new AboutTeam();\n            this.controller.openPage(aboutTeam.init());\n            break;\n          }\n\n        case IdPages.statistics:\n          {\n            var statistics = new StatisticsView();\n            this.controller.openPage(statistics.init());\n            break;\n          }\n\n        default:\n          {\n            this.controller.openPage(this.mainPage.create());\n          }\n      }\n    }\n  }]);\n\n  return App;\n}();\n;// CONCATENATED MODULE: ./index.ts\n\n\nvar app = new App();\napp.start();\n\n//# sourceURL=webpack:///./index.ts_+_39_modules?')}},__webpack_module_cache__={},deferred,leafPrototypes,getProto;function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](n,n.exports,__webpack_require__),n.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=function(e,t,n,r){if(!t){var o=1/0;for(c=0;c<deferred.length;c++){t=deferred[c][0],n=deferred[c][1],r=deferred[c][2];for(var a=!0,i=0;i<t.length;i++)(!1&r||o>=r)&&Object.keys(__webpack_require__.O).every((function(e){return __webpack_require__.O[e](t[i])}))?t.splice(i--,1):(a=!1,r<o&&(o=r));if(a){deferred.splice(c--,1);var s=n();void 0!==s&&(e=s)}}return e}r=r||0;for(var c=deferred.length;c>0&&deferred[c-1][2]>r;c--)deferred[c]=deferred[c-1];deferred[c]=[t,n,r]},getProto=Object.getPrototypeOf?function(e){return Object.getPrototypeOf(e)}:function(e){return e.__proto__},__webpack_require__.t=function(e,t){if(1&t&&(e=this(e)),8&t)return e;if("object"==typeof e&&e){if(4&t&&e.__esModule)return e;if(16&t&&"function"==typeof e.then)return e}var n=Object.create(null);__webpack_require__.r(n);var r={};leafPrototypes=leafPrototypes||[null,getProto({}),getProto([]),getProto(getProto)];for(var o=2&t&&e;"object"==typeof o&&!~leafPrototypes.indexOf(o);o=getProto(o))Object.getOwnPropertyNames(o).forEach((function(t){r[t]=function(){return e[t]}}));return r.default=function(){return e},__webpack_require__.d(n,r),n},__webpack_require__.d=function(e,t){for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},__webpack_require__.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},function(){var e;__webpack_require__.g.importScripts&&(e=__webpack_require__.g.location+"");var t=__webpack_require__.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=e}(),function(){var e={179:0};__webpack_require__.O.j=function(t){return 0===e[t]};var t=function(t,n){var r,o,a=n[0],i=n[1],s=n[2],c=0;if(a.some((function(t){return 0!==e[t]}))){for(r in i)__webpack_require__.o(i,r)&&(__webpack_require__.m[r]=i[r]);if(s)var u=s(__webpack_require__)}for(t&&t(n);c<a.length;c++)o=a[c],__webpack_require__.o(e,o)&&e[o]&&e[o][0](),e[o]=0;return __webpack_require__.O(u)},n=self.webpackChunk=self.webpackChunk||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))}();var __webpack_exports__=__webpack_require__.O(void 0,[843],(function(){return __webpack_require__(2050)}));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();